digraph G {
   randsep=0.3; rankdir=LR;
"f(149)" -> "f(96)";
"f(96)" [label="Incorrect outputs",shape="box"];
"f(149)" [label="Too fast!",shape="box"];
"f(99)" -> "f(96)";
"f(96)" [label="Incorrect outputs",shape="box"];
"f(99)" [label="Wrong units",shape="box"];
"f(102)" -> "f(96)";
"f(96)" [label="Incorrect outputs",shape="box"];
"f(102)" [label="Imprecise",shape="box"];
"f(105)" -> "f(96)";
"f(96)" [label="Incorrect outputs",shape="box"];
"f(105)" [label="Just plain wrong",shape="box"];
"f(108)" -> "f(96)";
"f(96)" [label="Incorrect outputs",shape="box"];
"f(108)" [label="Ignored an input",shape="box"];
"f(55)" -> "f(64)";
"f(64)" [label="Internal",shape="box"];
"f(55)" [label="Dangling / out of date pointers",shape="box"];
"f(79)" -> "f(64)";
"f(64)" [label="Internal",shape="box"];
"f(79)" [label="Undefined",shape="box"];
"f(82)" -> "f(64)";
"f(64)" [label="Internal",shape="box"];
"f(82)" [label="Boundary conditions",shape="box"];
"f(85)" -> "f(64)";
"f(64)" [label="Internal",shape="box"];
"f(85)" [label="Infinite loops / deadlock",shape="box"];
"f(120)" -> "f(64)";
"f(64)" [label="Internal",shape="box"];
"f(120)" [label="Unassigned/uninitialized variable/parameter",shape="box"];
"f(49)" -> "f(61)";
"f(61)" [label="External",shape="box"];
"f(49)" [label="Out-of-range or missing inputs",shape="box"];
"f(91)" -> "f(61)";
"f(61)" [label="External",shape="box"];
"f(91)" [label="Race conditions",shape="box"];
"f(111)" -> "f(61)";
"f(61)" [label="External",shape="box"];
"f(111)" [label="Unanticipated combination of inputs",shape="box"];
"f(61)" -> "f(46)";
"f(46)" [label="Robustness defects",shape="box"];
"f(61)" [label="External",shape="box"];
"f(64)" -> "f(46)";
"f(46)" [label="Robustness defects",shape="box"];
"f(64)" [label="Internal",shape="box"];
"f(114)" -> "f(46)";
"f(46)" [label="Robustness defects",shape="box"];
"f(114)" [label="Fails to recover gracefully",shape="box"];
"f(138)" -> "f(142)";
"f(142)" [label="Data streams",shape="box"];
"f(138)" [label="Poor metadata",shape="box"];
"f(132)" -> "f(125)";
"f(125)" [label="Poor external interface",shape="box"];
"f(132)" [label="Undocumented",shape="box"];
"f(135)" -> "f(125)";
"f(125)" [label="Poor external interface",shape="box"];
"f(135)" [label="Inconsistent/unclear",shape="box"];
"f(142)" -> "f(125)";
"f(125)" [label="Poor external interface",shape="box"];
"f(142)" [label="Data streams",shape="box"];
"f(29)" -> "f(26)";
"f(26)" [label="Time",shape="box"];
"f(29)" [label="Inadequate event response time",shape="box"];
"f(36)" -> "f(14)";
"f(14)" [label="Run time memory",shape="box"];
"f(36)" [label="Stack",shape="box"];
"f(39)" -> "f(14)";
"f(14)" [label="Run time memory",shape="box"];
"f(39)" [label="Heap",shape="box"];
"f(42)" -> "f(14)";
"f(14)" [label="Run time memory",shape="box"];
"f(42)" [label="Other",shape="box"];
"f(14)" -> "f(11)";
"f(11)" [label="Resource Use Defects",shape="box"];
"f(14)" [label="Run time memory",shape="box"];
"f(17)" -> "f(11)";
"f(11)" [label="Resource Use Defects",shape="box"];
"f(17)" [label="Executable storage",shape="box"];
"f(26)" -> "f(11)";
"f(11)" [label="Resource Use Defects",shape="box"];
"f(26)" [label="Time",shape="box"];
"f(33)" -> "f(11)";
"f(11)" [label="Resource Use Defects",shape="box"];
"f(33)" [label="Bus usage",shape="box"];
"f(286)" -> "f(11)";
"f(11)" [label="Resource Use Defects",shape="box"];
"f(286)" [label="Unknown limits on resource usage",shape="box"];
"p(256)" -> "p(243)";
"p(243)" [label="Code reuse",shape="ellipse"];
"p(256)" [label="Use existing libraries",shape="ellipse"];
"p(259)" -> "p(243)";
"p(243)" [label="Code reuse",shape="ellipse"];
"p(259)" [label="Make reusable",shape="ellipse"];
"p(233)" -> "p(230)";
"p(230)" [label="Good programmers",shape="ellipse"];
"p(233)" [label="Team players",shape="ellipse"];
"p(236)" -> "p(230)";
"p(230)" [label="Good programmers",shape="ellipse"];
"p(236)" [label="Technically competent",shape="ellipse"];
"p(249)" -> "p(218)";
"p(218)" [label="Analysis",shape="ellipse"];
"p(249)" [label="Model checking",shape="ellipse"];
"p(252)" -> "p(218)";
"p(218)" [label="Analysis",shape="ellipse"];
"p(252)" [label="Formal verification",shape="ellipse"];
"p(339)" -> "p(218)";
"p(218)" [label="Analysis",shape="ellipse"];
"p(339)" [label="Other",shape="ellipse"];
"p(209)" -> "p(206)";
"p(206)" [label="Testing",shape="ellipse"];
"p(209)" [label="Test automation",shape="ellipse"];
"p(212)" -> "p(206)";
"p(206)" [label="Testing",shape="ellipse"];
"p(212)" [label="Test selection",shape="ellipse"];
"p(215)" -> "p(206)";
"p(206)" [label="Testing",shape="ellipse"];
"p(215)" [label="Regression testing",shape="ellipse"];
"p(268)" -> "p(206)";
"p(206)" [label="Testing",shape="ellipse"];
"p(268)" [label="Match testing to status of development",shape="ellipse"];
"p(182)" -> "p(185)";
"p(185)" [label="Language appropriate to application",shape="ellipse"];
"p(182)" [label="Garbage collection in language",shape="ellipse"];
"p(191)" -> "p(185)";
"p(185)" [label="Language appropriate to application",shape="ellipse"];
"p(191)" [label="Pointerless languages",shape="ellipse"];
"p(200)" -> "p(185)";
"p(185)" [label="Language appropriate to application",shape="ellipse"];
"p(200)" [label="Well defined language",shape="ellipse"];
"p(174)" -> "p(171)";
"p(171)" [label="Memory",shape="ellipse"];
"p(174)" [label="Examine high water marks on stack and heap",shape="ellipse"];
"p(177)" -> "p(171)";
"p(171)" [label="Memory",shape="ellipse"];
"p(177)" [label="Measure allocated memory",shape="ellipse"];
"p(282)" -> "p(171)";
"p(171)" [label="Memory",shape="ellipse"];
"p(282)" [label="Measure size of stored code",shape="ellipse"];
"p(203)" -> "p(197)";
"p(197)" [label="Good tool support",shape="ellipse"];
"p(203)" [label="Debuggers",shape="ellipse"];
"p(164)" -> "p(161)";
"p(161)" [label="Measure resource usage",shape="ellipse"];
"p(164)" [label="CPU utilization",shape="ellipse"];
"p(168)" -> "p(161)";
"p(161)" [label="Measure resource usage",shape="ellipse"];
"p(168)" [label="Time",shape="ellipse"];
"p(171)" -> "p(161)";
"p(161)" [label="Measure resource usage",shape="ellipse"];
"p(171)" [label="Memory",shape="ellipse"];
}
