TTeemmppllaattee

    Standard Prolog file structure */

    /*

HHeeaaddeerr  **//

    /*

  LLooaaddss

    Load some code using "ensure_loaded". e.g.: */

     :- ensure_loaded([xx]).

    /*

    (Warning: there is some quirk in the Prolog loader when doing
    "goal_expansion"s. If you are using "ecg"s or "defs", then DON'T
    "ensure_loaded" those files; rather, load them the old-fashioned way: */

     :- [ecg]. */

  OOppeerraattoorrss

    Change the Prolog parser using "op/3"x. e.g.: */

     :- op(700,xfx,and).

    /*

  FFllaaggss

    Index predicates (with "index/1") or make some dynamic (with
    "dynamic/1") or discontiguous (with "discontiguous/1") or .... e.g.: */

     :- index(myemp(1,1,0,1,00)).
     :- discontiguous defs/2.
     :- mulitfile defs/2.
     :- dynamic defs/2.

    /*

  HHooookkss

    Change the Prolog parser using "term_expansion/2" and
    "goal_expansion/2". e.g. */

     term_expansion(X and Y,Z) :- xpands(X and Y, Z).

     goal_expansion(L with M and N,Z) :- tupleCompile(L with M and N,Z).

    /*

  HHaacckkss

    We won't talk about these. I didn't not write these. You did not see
    them. */

     goal_expansion(true(X,X),true).

    /*

BBooddyy

    Insert your applciation code here.

  UUttiillss

    Finally, add any general utilities last. e.g. */

     barph(X) :- format('W> ~w\n',X), fail. /*

FFooootteerr  **//

    /*

  SSttaarrtt--uuppss

    After all the above is loaded, how do we get this stuff started. */

