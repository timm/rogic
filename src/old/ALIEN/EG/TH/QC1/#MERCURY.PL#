:- [ops].

rangeP(accident(peter, londonRoad), t).
rangeP(accident(peter, londonRoad), f).
rangeP(oops(0), t).
rangeP(oops(0), f).
rangeP(check(0), t).
rangeP(check(0), f).
rangeP(check(mt(0)), t).
rangeP(check(mt(0)), f).
rangeP(medicalEmergency(londonRoad), t).
rangeP(medicalEmergency(londonRoad), f).
rangeP(oops(1), t).
rangeP(oops(1), f).
rangeP(check(1), t).
rangeP(check(1), f).
rangeP(check(mt(1)), t).
rangeP(check(mt(1)), f).
rangeP(dispatchAmbulanceTo(londonRoad), t).
rangeP(dispatchAmbulanceTo(londonRoad), f).
rangeP(oops(2), t).
rangeP(oops(2), f).
rangeP(check(2), t).
rangeP(check(2), f).
rangeP(check(mt(2)), t).
rangeP(check(mt(2)), f).
rangeP(ambulanceAvailable, t).
rangeP(ambulanceAvailable, f).
rangeP(oops(3), t).
rangeP(oops(3), f).
rangeP(check(3), t).
rangeP(check(3), f).
rangeP(check(mt(3)), t).
rangeP(check(mt(3)), f).
rangeP(oops(4), t).
rangeP(oops(4), f).
rangeP(check(4), t).
rangeP(check(4), f).
rangeP(check(mt(4)), t).
rangeP(check(mt(4)), f).

oneOfP(boolean, [t, f]).

personP(bashar, 'ban@doc.ic.ac.uk').
personP(russo, 'ar3@doc.ic.ac.uk').

groupP(1).

personGroupP(1, bashar).
personGroupP(1, russo).


object(accident(peter, londonRoad)).
object(oops(0)).
object(check(0)).
object(check(mt(0))).
object(medicalEmergency(londonRoad)).
object(oops(1)).
object(check(1)).
object(check(mt(1))).
object(dispatchAmbulanceTo(londonRoad)).
object(oops(2)).
object(check(2)).
object(check(mt(2))).
object(ambulanceAvailable).
object(oops(3)).
object(check(3)).
object(check(mt(3))).
object(oops(4)).
object(check(4)).
object(check(mt(4))).

statement(0, 0 if not accident(peter, londonRoad)then oops(0)).
statement(1, 1 if not (not accident(peter, londonRoad)or medicalEmergency(londonRoad))then oops(1)).
statement(2, 2 if not (not medicalEmergency(londonRoad)or dispatchAmbulanceTo(londonRoad))then oops(2)).
statement(3, 3 if not (not ambulanceAvailable or dispatchAmbulanceTo(londonRoad))then oops(3)).
statement(4, 4 if not not ambulanceAvailable then oops(4)).

oops(0)@t(1)=t :-
	{1, 0, 1},
	accident(peter, londonRoad)@t(1)=f.
accident(peter, londonRoad)@t(1)=t :-
	{1, mt(0), 1},
	oops(0)@t(1)=f.
check(mt(0))@t(1)=t :-
	{1, test(mt(0)), 1},
	oops(0)@t(1)=f,
	accident(peter, londonRoad)@t(1)=f.
oops(1)@t(1)=t :-
	{1, 1, 1},
	accident(peter, londonRoad)@t(1)=t,
	medicalEmergency(londonRoad)@t(1)=f.
medicalEmergency(londonRoad)@t(1)=t :-
	{1, mt(1), 1},
	oops(1)@t(1)=f.
accident(peter, londonRoad)@t(1)=f :-
	{1, mt(1), 1},
	oops(1)@t(1)=f.
check(mt(1))@t(1)=t :-
	{1, test(mt(1)), 1},
	oops(1)@t(1)=f,
	accident(peter, londonRoad)@t(1)=t,
	medicalEmergency(londonRoad)@t(1)=f.
oops(2)@t(1)=t :-
	{1, 2, 1},
	medicalEmergency(londonRoad)@t(1)=t,
	dispatchAmbulanceTo(londonRoad)@t(1)=f.
dispatchAmbulanceTo(londonRoad)@t(1)=t :-
	{1, mt(2), 1},
	oops(2)@t(1)=f.
medicalEmergency(londonRoad)@t(1)=f :-
	{1, mt(2), 1},
	oops(2)@t(1)=f.
check(mt(2))@t(1)=t :-
	{1, test(mt(2)), 1},
	oops(2)@t(1)=f,
	medicalEmergency(londonRoad)@t(1)=t,
	dispatchAmbulanceTo(londonRoad)@t(1)=f.
oops(3)@t(1)=t :-
	{1, 3, 1},
	ambulanceAvailable@t(1)=t,
	dispatchAmbulanceTo(londonRoad)@t(1)=f.
dispatchAmbulanceTo(londonRoad)@t(1)=t :-
	{1, mt(3), 1},
	oops(3)@t(1)=f.
ambulanceAvailable@t(1)=f :-
	{1, mt(3), 1},
	oops(3)@t(1)=f.
check(mt(3))@t(1)=t :-
	{1, test(mt(3)), 1},
	oops(3)@t(1)=f,
	ambulanceAvailable@t(1)=t,
	dispatchAmbulanceTo(londonRoad)@t(1)=f.
oops(4)@t(1)=t :-
	{1, 4, 1},
	ambulanceAvailable@t(1)=t.
ambulanceAvailable@t(1)=f :-
	{1, mt(4), 1},
	oops(4)@t(1)=f.
check(mt(4))@t(1)=t :-
	{1, test(mt(4)), 1},
	oops(4)@t(1)=f,
	ambulanceAvailable@t(1)=t.




