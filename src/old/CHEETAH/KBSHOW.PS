%!PS-Adobe-2.0
%%Creator: dvips(k) 5.86 Copyright 1999 Radical Eye Software
%%Title: kbshow.dvi
%%CreationDate: Wed Apr 18 09:11:56 2001
%%Pages: 5
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%DocumentFonts: Times-Bold Times-Roman Courier Helvetica
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: DVIPS kbshow
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2001.04.18:0911
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: 8r.enc
% @@psencodingfile@{
%   author = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry",
%   version = "0.6",
%   date = "1 July 1998",
%   filename = "8r.enc",
%   email = "tex-fonts@@tug.org",
%   docstring = "Encoding for TrueType or Type 1 fonts
%                to be used with TeX."
% @}
% 
% Idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard Encoding + ISO Latin 1 + extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% 
% (4) Remaining positions left undefined are for use in (hopefully)
% upward-compatible revisions, if someday more characters are generally
% available.
% 
% (5) hyphen appears twice for compatibility with both 
% ASCII and Windows.
% 
/TeXBase1Encoding [
% 0x00 (encoded characters from Adobe Standard not in Windows 3.1)
  /.notdef /dotaccent /fi /fl
  /fraction /hungarumlaut /Lslash /lslash
  /ogonek /ring /.notdef
  /breve /minus /.notdef 
% These are the only two remaining unencoded characters, so may as
% well include them.
  /Zcaron /zcaron 
% 0x10
 /caron /dotlessi 
% (unusual TeX characters available in, e.g., Lucida Bright)
 /dotlessj /ff /ffi /ffl 
 /.notdef /.notdef /.notdef /.notdef
 /.notdef /.notdef /.notdef /.notdef
 % very contentious; it's so painful not having quoteleft and quoteright
 % at 96 and 145 that we move the things normally found there to here.
 /grave /quotesingle 
% 0x20 (ASCII begins)
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three /four /five /six /seven
 /eight /nine /colon /semicolon /less /equal /greater /question
% 0x40
 /at /A /B /C /D /E /F /G /H /I /J /K /L /M /N /O
% 0x50
 /P /Q /R /S /T /U /V /W
 /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o
% 0x70
 /p /q /r /s /t /u /v /w
 /x /y /z /braceleft /bar /braceright /asciitilde
 /.notdef % rubout; ASCII ends
% 0x80
 /.notdef /.notdef /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /.notdef /.notdef /.notdef
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /.notdef /.notdef /Ydieresis
% 0xA0
 /.notdef % nobreakspace
 /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot
 /hyphen % Y&Y (also at 45); Windows' softhyphen
 /registered
 /macron
% 0xD0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def

%%EndProcSet
%%BeginProcSet: texps.pro
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]/Metrics
exch def dict begin Encoding{exch dup type/integertype ne{pop pop 1 sub
dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get div def}
ifelse}forall Metrics/Metrics currentdict end def[2 index currentdict
end definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{
dup sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1
roll mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def
dup[exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}
if}forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}
def end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
TeXDict begin 39158280 55380996 1000 600 600 (kbshow.dvi)
@start
%DVIPSBitmapFont: Fa cmsy8 8 2
/Fa 2 19 df<B812C0A32A037A9137>0 D<91B612C01307131FD97F80C8FC01FCC9FCEA
01F0EA03C0485A48CAFC121E121C123C123812781270A212F05AA97E1270A21278123812
3C121C121E7E6C7E6C7EEA01F0EA00FCEB7F80011FB612C01307130091C9FCAD003FB712
C05A7E2A3B7AAB37>18 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fb cmr6 6 2
/Fb 2 62 df<13E01201120712FF12F91201B3A7487EB512C0A212217AA01E>49
D<B712FEA3CAFCA9B712FEA3270F7C932F>61 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fc cmsy6 6 1
/Fc 1 107 df<12E0B3B3AD033179A413>106 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fd cmex10 10 2
/Fd 2 82 df<BB12FC86A3D87FC0C9001F7FF0007F6C6C17076C6C050113806C6CEF007F
1A1F6C6CF00FC06C6C18076C6C1803F201E06C6D17006D6C1860013F19706E18306D7E6D
6C18181B006D7E6D7E6D7EA26D7F6E7E6E7EA26E7E6E7E6E7EA26E7E6E7E80826F7E6F7E
A26F7E6F7E6F5A5EA24B5A5E4BCBFC153E157E5D5D4A5A4A5A14075D4A5A4ACCFC143E14
7E147C5C4948181801031930495A4A18704948186049CC12E0491801017EF003C0017C18
0749180F4848F01F800003197F49EF01FF4848050713004848173F48CA000FB5FC48BA5A
A25ABB5AA24D537B7F58>80 D<BB12E0A4000F90C9381FFE00000318F86C606C60B3B3B3
AF486D4B7E486D4B7E000F01F0913801FFFEB6021FEBFFE0A443537B7F4E>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fe cmr8 8 4
/Fe 4 62 df<13031307130E131C1338137013F0EA01E013C01203EA0780A2EA0F00A212
1EA35AA45AA512F8A25AAB7EA21278A57EA47EA37EA2EA0780A2EA03C0120113E0EA00F0
13701338131C130E1307130310437AB11B>40 D<12C07E12707E7E7E120FEA0780120313
C0EA01E0A2EA00F0A21378A3133CA4131EA5131FA2130FAB131FA2131EA5133CA41378A3
13F0A2EA01E0A2EA03C013801207EA0F00120E5A5A5A5A5A10437CB11B>I<130C133C13
7CEA03FC12FFEAFC7C1200B3B113FE387FFFFEA2172C7AAB23>49
D<B812FCA3CBFCADB812FCA32E137C9937>61 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Ff cmmi6 6 11
/Ff 11 117 df<D8FFFE903803FF80495BD807E0903800F80016E06C6CEB01804BC7FC6C
6C13065D6C6C5B1538017E5B5D6D485A4A5AD91F87C8FC148E149CEB0FF85C6D5A5CA35C
130FA391C9FC5BA35B3807FFF0A229227DA124>89 D<013FB512F0A291388007E0D97C00
13C00178EB0F800170EB1F0049133E495B5D4848485A4A5A4A5AC7485A4AC7FC143E5C14
FC495A495A495A90380FC006EB1F80EB3F00017E5B5B4848131C4848131848481338485A
48485B393F0001F0007E130FB65AA224227CA12A>I<131FEBFF8C3801E0DE3803807E38
07007C48133C121E123E003C5B127CA3485BA215401560903801E0C012781303393807E1
80391C1CF300380FF87F3807E03C1B177E9522>97 D<EB0FE0EB7FF83801F03C3803C01C
3807803C380F007C121E003E133814005AA35AA400781304140C00381338003C1370381F
03E0380FFF803801FC0016177E951C>99 D<EB1F80EBFFE03803E07038078030EA1F0012
3E123C007C1360387807C0B51280EBF80000F8C7FC5AA41408141800781370003813E038
1E07C0380FFF00EA03F815177D951D>101 D<13F8EA0FF0A21200A2485AA4485AA43807
87E0EB9FF8EBB83CEBE01C380FC01E1380A21300001E5BA35C5AA2ECF0201530481460EB
01E015C0A239F000E380ECFF000060133C1C247CA224>104 D<1338137CA21378137013
00A7EA0780EA1FC0EA38E01230EA60F0EAC1E0A3EA03C0A3EA0780A2EA0F0013041306EA
1E0CA21318121CEA1E70EA0FE0EA07800F237DA116>I<000F13FC381FC3FF3931C70780
3861EC0301F813C0EAC1F0A213E03903C00780A3EC0F00EA0780A2EC1E041506D80F0013
0C143C15181538001EEB1C70EC1FE0000CEB07801F177D9526>110
D<EB0FE0EB7FF83801F03C3803C01E48487EEA0F00001E1480123EA25AA348EB1F00A214
1E143E0078133C5C00385B383C01E0381F07C06CB4C7FCEA01F819177E951F>I<EB3F80
EBFFE03801E0F038038030EB00704813F0A2EB8040EBC00013FE3803FF806C13C038003F
E0EB03F0EA3000127800F813E0A24813C0EA600138780F80383FFE00EA07F814177D951D
>115 D<133013785BA4485AA4485AB51280A23803C000485AA448C7FCA4121EA25B1480
383C03001306A25BEA1C38EA0FF0EA07C011217D9F18>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fg cmmi8 8 20
/Fg 20 122 df<123C127E12FFA4127E123C08087A8714>58 D<EE01C01607161FEE7F00
ED01FCED07F0ED1FC0037FC7FCEC01FCEC07F0EC0FC0023FC8FC14FCEB03F8EB0FE0EB3F
8001FEC9FCEA03F8EA0FE0EA3F8000FECAFC12F812FEEA3F80EA0FE0EA03F8EA00FEEB3F
80EB0FE0EB03F8EB00FC143FEC0FC0EC07F0EC01FCEC007FED1FC0ED07F0ED01FCED007F
EE1FC0160716012A2B7AA537>60 D<12E012F812FEEA3F80EA0FE0EA03F8EA00FEEB3F80
EB0FE0EB03F8EB00FC143FEC0FC0EC07F0EC01FCEC007FED1FC0ED07F0ED01FCED007FEE
1FC01607161FEE7F00ED01FCED07F0ED1FC0037FC7FCEC01FCEC07F0EC0FC0023FC8FC14
FCEB03F8EB0FE0EB3F8001FEC9FCEA03F8EA0FE0EA3F8000FECAFC12F812E02A2B7AA537
>62 D<90260FFFFCEB7FFFA29026007FC0EB0FF06E48148018006E6C131E1718020F5C6F
5B02075C6F485A020349C7FCEDF8065E6E6C5A5E6E6C5A5EED7F8093C8FC6F7EA26F7E15
3F156FEDCFE0EC018791380307F0EC0703020E7F141C4A6C7E14704A6C7E495A4948137F
49C7FC010E6E7E5B496E7E5BD801F081D807F8143FD8FFFE0103B5FCA2382D7EAC3A>88
D<B500C090380FFFC0A2D807F8C73801FC00000316F05F6C6CEC038094C7FC16066C6C5C
5E017F5C16706D5C6E485A4B5A6D6C48C8FC15066D6C5A5D5D6D6C5A5D903803F98002FB
C9FC14FF6D5A5C5CA35C1303A35C1307A35C130FA3131F0007B5FCA2322D7DAC29>I<01
07B612F8A2903A0FFC0007F002E0EB0FE00280EB1FC049C71380011E143F011CEC7F0049
14FE4B5A0130495A0170495A0160495A4B5A4B5A90C748C7FCA215FE4A5A4A5A4A5A4A5A
4A5A4A5A4AC8FC14FE5C130149481306495A4948130E4948130C495A49C7121C01FE1418
48481438485A5E484814F048481301484813034848495A48C7127FB7FC5E2D2D7CAC30>
I<EB07E0EB1FF890387C1CE0EBF80D3801F00F3803E007EA07C0120FD81F8013C0A2EA3F
00140F481480127EA2141F00FE14005AA2EC3F02EC3E06A25AEC7E0E007CEBFE0C14FC01
01131C393E07BE18391F0E1E38390FFC0FF03903F003C01F1F7D9D25>97
D<EB01F8EB0FFE90383E0780EB7C01D801F813C03803F0073807E00FEA0FC00180138012
1F48C8FCA25A127EA312FE5AA51560007C14E0EC01C0EC03806CEB0F00001E131C380F81
F83807FFE0C648C7FC1B1F7D9D1F>99 D<151FEC03FFA2EC003FA2153EA2157EA2157CA2
15FCA215F8A21401EB07E190381FF9F0EB7C1DEBF80FEA01F03903E007E0EA07C0120FEA
1F8015C0EA3F00140F5A007E1480A2141F12FE481400A2EC3F021506143E5AEC7E0E007C
EBFE0C14FC0101131C393E07BE18391F0E1E38390FFC0FF03903F003C0202F7DAD24>I<
EB03F8EB0FFE90383E0780EBF803D801F013C03803E001EA07C0000F1303D81F80138014
07393F000F00141E387F01FCEBFFF091C7FC007EC8FC12FE5AA4127C156015E0EC01C06C
EB0380EC0F006C131C380F81F83803FFE0C648C7FC1B1F7D9D21>I<157C4AB4FC913807
C380EC0F87150FEC1F1FA391383E0E0092C7FCA3147E147CA414FC90383FFFF8A2D900F8
C7FCA313015CA413035CA413075CA5130F5CA4131F91C8FCA4133EA3EA383C12FC5BA25B
12F0EAE1E0EA7FC0001FC9FC213D7CAE22>I<131FEA03FFA2EA003FA2133EA2137EA213
7CA213FCA25BA21201143F9038F1FFC09038F3C1F03803FF0001FC7F5BA2485A5BA25B00
0F13015D1380A2001F13035D1300140748ECC04016C0003E130F1580007E148191381F01
80007C1403ED070000FCEB0F06151E48EB07F80070EB01E0222F7DAD29>104
D<1307EB0F80EB1FC0A2EB0F80EB070090C7FCA9EA01E0EA07F8EA0E3CEA1C3E12381230
1270EA607EEAE07C12C013FC485A120012015B12035BA21207EBC04014C0120F13801381
381F01801303EB0700EA0F06131EEA07F8EA01F0122E7EAC18>I<137CEA0FFCA21200A2
13F8A21201A213F0A21203A213E0A21207A213C0A2120FA21380A2121FA21300A25AA212
3EA2127EA2127CA2EAFC08131812F8A21338133012F01370EAF860EA78E0EA3FC0EA0F00
0E2F7DAD15>108 D<3907C007E0391FE03FF83918F8783E393879E01E39307B801F3870
7F00126013FEEAE0FC12C05B00815C0001143E5BA20003147E157C5B15FC0007ECF80816
18EBC00115F0000F1538913803E0300180147016E0001F010113C015E390C7EAFF00000E
143E251F7E9D2B>110 D<EB01F8EB0FFF90383F078090387C03C0D801F813E03903F001
F0EA07E0D80FC013F8EB8000121F48C7FC14015A127EA2140300FE14F05AA2EC07E0A2EC
0FC0A2007CEB1F801500143E6C5B6C485A380F83E03803FF80D800FCC7FC1D1F7D9D22>
I<3807C01F390FF07FC0391CF8E0E0383879C138307B8738707F07EA607E13FC00E0EB03
804848C7FCA2128112015BA21203A25BA21207A25BA2120FA25BA2121FA290C8FC120E1B
1F7E9D20>114 D<EB07E0EB3FF8EB781EEBF0063801E0073803C00F141FA20007131E14
0CEBE00013F8EBFF806C13E06C13F06C13F8EB3FFC13011300147C0078133C12FCA2147C
48137800E013F814F0386001E0387807C0381FFF00EA07F8181F7C9D21>I<130E131FA2
5BA2133EA2137EA2137CA213FCA2B512F8A23801F800A25BA21203A25BA21207A25BA212
0FA25BA2001F1310143013001470146014E0381E01C0EB0380381F0700EA0F0EEA07FCEA
01F0152B7EA919>I<EA01E0D807F8130ED80E3C131FD81C3E133F0038143E12301270D8
607E137ED8E07C137C12C013FC484813FC000014F812015B1401000314F013E0A2140300
0714E013C0A2140715C00003130FEBE01F143F3901F07F8038007FEFEB1F8FEB001F1500
A2003E133EA2007E5B5C387C01F0387003E0383007C0383C0F80D80FFEC7FCEA03F0202C
7E9D23>121 D E
%EndDVIPSBitmapFont
/Fh 136[48 1[33 18 26 22 1[33 33 33 52 18 33 1[18 33
33 1[29 33 29 1[29 18[48 59 7[41 1[44 3[29 1[37 1[18
18 33 33 33 33 33 33 33 33 33 33 1[17 22 3[22 22 3[33
36[{TeXBase1Encoding ReEncodeFont}41 66.4176 /Times-Roman
rf /Fi 103[40 29[40 40 1[40 40 40 40 40 40 40 40 40 40
40 40 40 40 40 40 40 40 40 40 40 40 40 3[40 1[40 3[40
40 2[40 40 2[40 1[40 3[40 2[40 2[40 1[40 40 40 1[40 2[40
40 40 40 40 40 40 40 40 40 40 1[40 40 40 2[40 40 40 40
40 37[{TeXBase1Encoding ReEncodeFont}60 66.4176 /Courier
rf /Fj 138[55 33 39 44 2[50 55 83 28 2[28 55 50 1[44
1[44 55 50 14[72 2[78 10[72 72 66 4[57 8[50 50 50 50
50 1[25 1[25 44[{TeXBase1Encoding ReEncodeFont}28 99.6264
/Times-Bold rf /Fk 138[42 23 32 28 2[42 42 65 23 2[23
42 42 1[37 1[37 42 37 14[55 2[60 10[60 55 55 4[47 7[42
42 42 42 42 42 1[21 1[21 44[{TeXBase1Encoding ReEncodeFont}29
83.022 /Times-Roman rf /Fl 139[28 32 4[46 4[23 46 2[37
46 9[55 5[55 1[60 3[60 2[65 42 32 65 2[55 1[60 55 60
11[42 42 42 42 42 49[{TeXBase1Encoding ReEncodeFont}24
83.022 /Times-Bold rf /Fm 139[40 47 3[60 66 4[33 66 2[53
66 9[80 5[80 1[86 3[86 2[93 60 47 93 2[80 1[86 80 86
12[60 60 60 60 49[{TeXBase1Encoding ReEncodeFont}24 119.552
/Times-Bold rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: a4
a4
%%EndPaperSize

%%EndSetup
%%Page: 1 1
1 0 bop 515 523 a Fm(Contents)515 709 y Fl(1)82 b(J)n(ANE)2483
b(2)639 808 y Fk(1.1)86 b(Domain)19 b(Rules)38 b(.)j(.)g(.)h(.)f(.)g(.)
h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g
(.)g(.)h(.)f(.)g(.)g(.)h(.)165 b(2)639 908 y(1.2)86 b(Combination)19
b(Rules)58 b(.)41 b(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g
(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)165
b(2)515 1090 y Fl(2)82 b(Inside)22 b(the)e(KB)2209 b(3)515
1273 y(3)82 b(CHEET)-7 b(AH)2290 b(4)639 1373 y Fk(3.1)86
b(One)20 b(run)57 b(.)41 b(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g
(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)
g(.)g(.)h(.)165 b(4)639 1472 y(3.2)86 b(1000)19 b(runs)59
b(.)42 b(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)
f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)165
b(4)515 1655 y Fl(4)82 b(T)-7 b(ARZAN)2355 b(5)639 1755
y Fk(4.1)86 b(Business)21 b(Decisions,)f(Changes=2)77
b(.)41 b(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)
g(.)g(.)h(.)165 b(5)639 1854 y(4.2)86 b(Cost)21 b(Decisions,)f
(Changes=1)33 b(.)41 b(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g
(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)165 b(5)639 1954
y(4.3)86 b(Cost)21 b(Decisions,)f(Changes=2)33 b(.)41
b(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h
(.)f(.)g(.)g(.)h(.)165 b(5)1926 5255 y(1)p eop
%%Page: 2 2
2 1 bop 515 523 a Fm(1)119 b(J)l(ANE)515 725 y Fj(1.1)99
b(Domain)24 b(Rules)515 860 y Fi(jim)39 b(says)g(cost=100.)515
939 y('iv&v')g(if)g('planAndScheduleIV&Vactivities'.)515
1097 y(jim)g(says)g(cost=0.)515 1176 y(stableRequirements)e(if)i
(authorization)f(@0.1)1391 1254 y(rand)i(effectiveReqReviews)d(@0.9)
1391 1333 y(rand)j(problemReport)e(@0.9)1391 1412 y(rand)i
(configurationManagement@0.3)1391 1491 y(rand)g('iv&v'@0.1)1391
1570 y(rand)g(documentedRequirements)c(@0.3)1391 1649
y(rand)k(designReqReview)d(@0.9.)515 1807 y(jim)i(says)g(cost=0.)515
1885 y(completeRequirements)e(if)i(effectiveReqReviews)e(@0.9)1511
1964 y(rand)i('iv&v'@0.1)1511 2043 y(rand)g(documentedRequirements)e
(@0.9)1511 2122 y(rand)i(problemReport)78 b(@)40 b(0.3)1511
2201 y(rand)f(designReqReview)f(@0.9.)515 2359 y(goodRequirements)f(if)
j(stableRequirements)1312 2438 y(rand)f(completeRequirements.)515
2595 y(jim)g(says)g(cost)h(=)f(5.)515 2674 y(designReqReview)e(if)j
(designMeetsRequirementsReview.)515 2832 y(...)515 3070
y Fj(1.2)99 b(Combination)25 b(Rules)p 1019 3139 1857
4 v 1017 3218 4 79 v 1197 3194 a Fh(operator)p 1594 3218
V 230 w Fg(X)1704 3202 y Ff(cost)p 2144 3218 V 2195 3194
a Fg(X)2253 3206 y Ff(chances)p 2873 3218 V 1019 3221
1857 4 v 1017 3379 4 158 v 1069 3276 a Fg(X)f Fe(=)100
b Fg(or)r Fe(\()p Fg(Y)16 b Fe(\))1306 3355 y Fg(r)r(or)r
Fe(\()p Fg(Y)g Fe(\))p 1594 3379 V 1646 3276 a Fg(f)7
b(ir)r(st)p Fe(\()p Fg(Y)16 b Fe(\))p Fg(:cost)p 2144
3379 V 138 w(f)7 b(ir)r(st)p Fe(\()p Fg(Y)16 b Fe(\))p
Fg(:chances)p 2873 3379 V 1019 3382 1857 4 v 1017 3461
4 79 v 1594 3461 V 2144 3461 V 2873 3461 V 1017 3639
4 178 v 1069 3536 a(X)24 b Fe(=)100 b Fg(and)p Fe(\()p
Fg(Y)17 b Fe(\))1306 3615 y Fg(r)r(and)p Fe(\()p Fg(Y)f
Fe(\))p 1594 3639 V 1646 3478 a Fd(P)1733 3499 y Fc(j)p
Ff(Y)d Fc(j)1733 3565 y Ff(i)p Fb(=1)1848 3536 y Fg(cost)p
Fe(\()p Fg(Y)2039 3546 y Ff(i)2066 3536 y Fe(\))p 2144
3639 V 2195 3478 a Fd(Q)2274 3499 y Fc(j)p Ff(Y)g Fc(j)2274
3565 y Ff(i)p Fb(=1)2389 3536 y Fg(chances)p Fe(\()p
Fg(Y)2706 3546 y Ff(i)2731 3536 y Fe(\))p 2873 3639 V
1019 3642 1857 4 v 1017 3957 4 316 v 1069 3697 a Fg(X)24
b Fe(=)100 b Fg(r)r(or)r(s)p Fe(\()p Fg(Y)15 b Fe(\))1306
3776 y Fg(or)r(s)p Fe(\()p Fg(Y)g Fe(\))1306 3855 y Fg(r)r(any)r
Fe(\()p Fg(Y)h Fe(\))1306 3934 y Fg(any)r Fe(\()p Fg(Y)h
Fe(\))p 1594 3957 V 1646 3697 a Fg(Z)24 b Fa(\022)19
b Fg(Y)1646 3734 y Fd(P)1733 3754 y Fc(j)p Ff(Z)s Fc(j)1733
3821 y Ff(i)p Fb(=1)1848 3792 y Fg(cost)p Fe(\()p Fg(Z)2046
3802 y Ff(i)2073 3792 y Fe(\))p 2144 3957 V 2195 3697
a Fg(Z)24 b Fa(\022)c Fg(Y)2195 3734 y Fd(P)2283 3754
y Fc(j)p Ff(Z)s Fc(j)2283 3821 y Ff(i)p Fb(=1)2398 3792
y Fg(chances)p Fe(\()p Fg(Z)2722 3802 y Ff(i)2747 3792
y Fe(\))p 2873 3957 V 1019 3961 1857 4 v 1017 4044 4
84 v 1069 4019 a Fg(X)k Fe(=)100 b Fg(no)p Fe(\()p Fg(Y)16
b Fe(\))p 1594 4044 V 1646 3961 a Fd(P)1733 4019 y Fe(\()p
Fg(al)q(l)q(Y)t(:cost)p Fe(\))p 2144 4044 V 139 w(1)r
Fa(\000)2289 3961 y Fd(P)2377 4019 y Fe(\()p Fg(al)q(l)q(Y)t(:chances)p
Fe(\))p 2873 4044 V 1019 4047 1857 4 v 1926 5255 a Fk(2)p
eop
%%Page: 3 3
3 2 bop 515 523 a Fm(2)119 b(Inside)30 b(the)g(KB)147
4013 y @beginspecial 36 @llx 36 @lly 1963 @urx 1853 @ury
4320 @rwi @setspecial
%%BeginDocument: kb.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.0 (06-14-99)
%%For: Bill Gates
%%Title: G
%%Pages: (atend)
%%BoundingBox: 36 36 1963 1853
%%EndComments
%%BeginProlog
save
/DotDict 200 dict def
DotDict begin

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
% alignfactor tells what fraction to place on the left.
% -.5 is centered.
/alignedtext {			% text labelwidth fontsz alignfactor
	/alignfactor exch def
	/fontsz exch def
	/width exch def
	/text exch def
	gsave
		% even if node or edge is dashed, don't paint text with dashes
		[] 0 setdash
		currentpoint newpath moveto
		text stringwidth pop
		alignfactor mul fontsz -.3 mul rmoveto
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def
%%EndProlog
%%Page: 1 1
%%PageBoundingBox: 36 36 1963 1853
%%PageOrientation: Portrait
gsave
35 35 1928 1818 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
14.00 /Times-Roman set_font

%	authorizationToProceed=t
gsave 10 dict begin
gsave 10 dict begin
405 381 moveto (authorizationToProceed) 134 14.00 -0.50 alignedtext
end grestore
end grestore

%	authorization=t
gsave 10 dict begin
gsave 10 dict begin
711 381 moveto (authorization) 73 14.00 -0.50 alignedtext
end grestore
end grestore

%	authorizationToProceed=t -> authorization=t
newpath 479 380 moveto
534 380 607 380 657 380 curveto
stroke
newpath 657 378 moveto
667 380 lineto
657 383 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
584 389 moveto ($0.7 to 1.3 ) 63 14.00 -0.50 alignedtext
end grestore

%	rand(rand172)
gsave 10 dict begin
gsave 10 dict begin
979 383 moveto (rand) 24 14.00 -0.50 alignedtext
end grestore
end grestore

%	authorization=t -> rand(rand172)
newpath 755 380 moveto
809 381 897 381 945 382 curveto
stroke
newpath 942 380 moveto
952 382 lineto
942 385 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
845 390 moveto (?0.07 to 0.13 ) 76 14.00 -0.50 alignedtext
end grestore

%	rany(rany46)
gsave 10 dict begin
gsave 10 dict begin
405 435 moveto (rany) 24 14.00 -0.50 alignedtext
end grestore
end grestore

%	effectiveReqReviews=t
gsave 10 dict begin
gsave 10 dict begin
711 435 moveto (effectiveReqReviews) 119 14.00 -0.50 alignedtext
end grestore
end grestore

%	rany(rany46) -> effectiveReqReviews=t
newpath 432 434 moveto
477 434 569 434 635 434 curveto
stroke
newpath 634 432 moveto
644 434 lineto
634 437 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
584 443 moveto ($10 to 20 ) 56 14.00 -0.50 alignedtext
end grestore

%	effectiveReqReviews=t -> rand(rand172)
newpath 778 423 moveto
815 417 861 410 891 404 curveto
891 404 919 397 943 391 curveto
stroke
newpath 942 389 moveto
952 389 lineto
943 394 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
845 428 moveto (?0.63 to 1.17 ) 76 14.00 -0.50 alignedtext
end grestore

%	rand(rand173)
gsave 10 dict begin
gsave 10 dict begin
979 149 moveto (rand) 24 14.00 -0.50 alignedtext
end grestore
end grestore

%	effectiveReqReviews=t -> rand(rand173)
newpath 778 423 moveto
784 421 790 417 792 410 curveto
799 392 789 201 799 185 curveto
811 168 893 157 942 152 curveto
stroke
newpath 942 150 moveto
952 151 lineto
942 154 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
845 194 moveto (?0.63 to 1.17 ) 76 14.00 -0.50 alignedtext
end grestore

%	rand(rand180)
gsave 10 dict begin
gsave 10 dict begin
979 915 moveto (rand) 24 14.00 -0.50 alignedtext
end grestore
end grestore

%	effectiveReqReviews=t -> rand(rand180)
newpath 778 448 moveto
786 451 791 454 792 458 curveto
806 507 785 716 799 766 curveto
809 795 867 764 891 784 curveto
919 806 950 858 967 890 curveto
stroke
newpath 968 886 moveto
970 896 lineto
963 888 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
845 793 moveto (?0.07 to 0.13 ) 76 14.00 -0.50 alignedtext
end grestore

%	peerReviewOfRequirements=t
gsave 10 dict begin
gsave 10 dict begin
128 354 moveto (peerReviewOfRequirements) 159 14.00 -0.50 alignedtext
end grestore
end grestore

%	peerReviewOfRequirements=t -> rany(rany46)
newpath 215 366 moveto
230 369 245 373 256 377 curveto
268 381 261 405 272 410 curveto
304 422 339 419 371 424 curveto
stroke
newpath 368 421 moveto
378 425 lineto
368 426 lineto
closepath
gsave 0 setgray stroke grestore fill

%	conductFormalInspectionOfRequirements=t
gsave 10 dict begin
gsave 10 dict begin
128 516 moveto (conductFormalInspectionOfRequirements) 235 14.00 -0.50 alignedtext
end grestore
end grestore

%	conductFormalInspectionOfRequirements=t -> rany(rany46)
newpath 237 497 moveto
244 495 250 493 256 491 curveto
268 486 261 462 272 458 curveto
272 458 330 448 370 440 curveto
stroke
newpath 368 438 moveto
378 439 lineto
368 443 lineto
closepath
gsave 0 setgray stroke grestore fill

%	softwareAssuranceReviewOfRequirements=t
gsave 10 dict begin
gsave 10 dict begin
128 462 moveto (softwareAssuranceReviewOfRequirements) 241 14.00 -0.50 alignedtext
end grestore
end grestore

%	softwareAssuranceReviewOfRequirements=t -> rany(rany46)
newpath 256 449 moveto
297 445 340 440 369 438 curveto
stroke
newpath 368 436 moveto
378 437 lineto
368 441 lineto
closepath
gsave 0 setgray stroke grestore fill

%	conductFormalReviews=t
gsave 10 dict begin
gsave 10 dict begin
128 408 moveto (conductFormalReviews) 132 14.00 -0.50 alignedtext
end grestore
end grestore

%	conductFormalReviews=t -> rany(rany46)
newpath 202 414 moveto
256 420 327 426 369 430 curveto
stroke
newpath 368 427 moveto
378 431 lineto
368 432 lineto
closepath
gsave 0 setgray stroke grestore fill

%	problemReportAndCorrectiveActionSystem=t
gsave 10 dict begin
gsave 10 dict begin
405 44 moveto (problemReportAndCorrectiveActionSystem) 247 14.00 -0.50 alignedtext
end grestore
end grestore

%	problemReport=t
gsave 10 dict begin
gsave 10 dict begin
711 44 moveto (problemReport) 84 14.00 -0.50 alignedtext
end grestore
end grestore

%	problemReportAndCorrectiveActionSystem=t -> problemReport=t
newpath 536 43 moveto
576 43 618 43 650 43 curveto
stroke
newpath 651 41 moveto
661 43 lineto
651 46 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
584 52 moveto ($3.5 to 6.5 ) 63 14.00 -0.50 alignedtext
end grestore

%	problemReport=t -> rand(rand172)
newpath 754 61 moveto
770 70 786 80 792 92 curveto
802 110 788 193 799 208 curveto
818 234 869 205 891 226 curveto
921 256 952 321 968 357 curveto
stroke
newpath 969 354 moveto
971 364 lineto
965 356 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
845 235 moveto (?0.63 to 1.17 ) 76 14.00 -0.50 alignedtext
end grestore

%	problemReport=t -> rand(rand173)
newpath 761 40 moveto
802 39 859 40 891 52 curveto
917 62 945 97 962 122 curveto
stroke
newpath 964 120 moveto
967 130 lineto
960 123 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
845 61 moveto (?0.21 to 0.39 ) 76 14.00 -0.50 alignedtext
end grestore

%	implementFormalConfigurationManagement=t
gsave 10 dict begin
gsave 10 dict begin
405 489 moveto (implementFormalConfigurationManagement) 251 14.00 -0.50 alignedtext
end grestore
end grestore

%	configurationManagement=t
gsave 10 dict begin
gsave 10 dict begin
711 489 moveto (configurationManagement) 148 14.00 -0.50 alignedtext
end grestore
end grestore

%	implementFormalConfigurationManagement=t -> configurationManagement=t
newpath 538 488 moveto
566 488 595 488 621 488 curveto
stroke
newpath 620 486 moveto
630 488 lineto
620 491 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
584 497 moveto ($20 to 30 ) 56 14.00 -0.50 alignedtext
end grestore

%	configurationManagement=t -> rand(rand172)
newpath 792 470 moveto
827 462 866 452 891 442 curveto
908 435 931 420 949 406 curveto
stroke
newpath 947 405 moveto
956 400 lineto
950 408 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
845 477 moveto (?0.21 to 0.39 ) 76 14.00 -0.50 alignedtext
end grestore

%	planAndScheduleIV&Vactivities=t
gsave 10 dict begin
gsave 10 dict begin
405 123 moveto (planAndScheduleIV&Vactivities) 185 14.00 -0.50 alignedtext
end grestore
end grestore

%	iv&v=t
gsave 10 dict begin
gsave 10 dict begin
711 123 moveto (iv&v) 28 14.00 -0.50 alignedtext
end grestore
end grestore

%	planAndScheduleIV&Vactivities=t -> iv&v=t
newpath 505 122 moveto
564 122 634 122 676 122 curveto
stroke
newpath 674 120 moveto
684 122 lineto
674 125 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
584 131 moveto ($70 to 130 ) 63 14.00 -0.50 alignedtext
end grestore

%	iv&v=t -> rand(rand172)
newpath 721 140 moveto
738 169 772 224 799 249 curveto
824 272 865 269 891 288 curveto
913 303 940 335 958 357 curveto
stroke
newpath 959 355 moveto
964 364 lineto
956 358 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
845 297 moveto (?0.07 to 0.13 ) 76 14.00 -0.50 alignedtext
end grestore

%	iv&v=t -> rand(rand173)
newpath 738 107 moveto
757 97 782 85 799 81 curveto
829 75 863 71 891 81 curveto
910 88 935 108 953 124 curveto
stroke
newpath 954 122 moveto
960 130 lineto
951 125 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
845 90 moveto (?0.07 to 0.13 ) 76 14.00 -0.50 alignedtext
end grestore

%	stableRequirements=t
gsave 10 dict begin
gsave 10 dict begin
1238 383 moveto (stableRequirements) 110 14.00 -0.50 alignedtext
end grestore
end grestore

%	rand(rand172) -> stableRequirements=t
newpath 1006 382 moveto
1044 382 1115 382 1169 382 curveto
stroke
newpath 1166 380 moveto
1176 382 lineto
1166 385 lineto
closepath
gsave 0 setgray stroke grestore fill

%	rand(rand174)
gsave 10 dict begin
gsave 10 dict begin
1443 383 moveto (rand) 24 14.00 -0.50 alignedtext
end grestore
end grestore

%	stableRequirements=t -> rand(rand174)
newpath 1300 382 moveto
1334 382 1376 382 1406 382 curveto
stroke
newpath 1406 380 moveto
1416 382 lineto
1406 385 lineto
closepath
gsave 0 setgray stroke grestore fill

%	documentedRequirements=t
gsave 10 dict begin
gsave 10 dict begin
711 277 moveto (documentedRequirements) 146 14.00 -0.50 alignedtext
end grestore
end grestore

%	documentedRequirements=t -> rand(rand172)
newpath 757 294 moveto
809 315 894 348 942 367 curveto
stroke
newpath 944 365 moveto
952 371 lineto
942 370 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
845 356 moveto (?0.21 to 0.39 ) 76 14.00 -0.50 alignedtext
end grestore

%	documentedRequirements=t -> rand(rand173)
newpath 724 258 moveto
742 231 774 182 792 152 curveto
796 147 793 135 799 133 curveto
838 126 904 135 944 142 curveto
stroke
newpath 942 139 moveto
952 143 lineto
942 144 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
845 144 moveto (?0.63 to 1.17 ) 76 14.00 -0.50 alignedtext
end grestore

%	designReqReview=t
gsave 10 dict begin
gsave 10 dict begin
711 1123 moveto (designReqReview) 101 14.00 -0.50 alignedtext
end grestore
end grestore

%	designReqReview=t -> rand(rand172)
newpath 722 1104 moveto
739 1075 773 1019 799 992 curveto
824 966 884 971 891 936 curveto
906 864 887 571 898 500 curveto
902 470 932 433 954 408 curveto
stroke
newpath 953 406 moveto
961 400 lineto
956 409 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
845 1001 moveto (?0.63 to 1.17 ) 76 14.00 -0.50 alignedtext
end grestore

%	designReqReview=t -> rand(rand173)
newpath 720 1104 moveto
739 1065 783 974 792 919 curveto
801 868 788 661 799 612 curveto
811 562 873 538 891 491 curveto
908 447 887 396 898 352 curveto
912 302 948 217 967 174 curveto
stroke
newpath 964 174 moveto
971 166 lineto
969 176 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
845 621 moveto (?0.63 to 1.17 ) 76 14.00 -0.50 alignedtext
end grestore

%	rand(rand175)
gsave 10 dict begin
gsave 10 dict begin
979 1395 moveto (rand) 24 14.00 -0.50 alignedtext
end grestore
end grestore

%	designReqReview=t -> rand(rand175)
newpath 720 1140 moveto
737 1174 774 1249 792 1293 curveto
797 1303 790 1320 799 1327 curveto
827 1344 861 1346 891 1358 curveto
905 1363 926 1371 943 1378 curveto
stroke
newpath 944 1376 moveto
952 1382 lineto
942 1380 lineto
closepath
gsave 0 setgray stroke grestore fill

%	rand(rand176)
gsave 10 dict begin
gsave 10 dict begin
979 1641 moveto (rand) 24 14.00 -0.50 alignedtext
end grestore
end grestore

%	designReqReview=t -> rand(rand176)
newpath 720 1140 moveto
741 1184 792 1293 792 1293 curveto
800 1323 786 1454 799 1483 curveto
813 1511 868 1479 891 1500 curveto
920 1525 951 1582 967 1615 curveto
stroke
newpath 968 1612 moveto
970 1622 lineto
964 1614 lineto
closepath
gsave 0 setgray stroke grestore fill

%	rand(rand178)
gsave 10 dict begin
gsave 10 dict begin
979 1201 moveto (rand) 24 14.00 -0.50 alignedtext
end grestore
end grestore

%	designReqReview=t -> rand(rand178)
newpath 739 1140 moveto
758 1152 782 1166 799 1171 curveto
837 1181 903 1191 944 1196 curveto
stroke
newpath 942 1193 moveto
952 1197 lineto
942 1198 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
845 1197 moveto (?0.21 to 0.39 ) 76 14.00 -0.50 alignedtext
end grestore

%	designReqReview=t -> rand(rand180)
newpath 733 1104 moveto
752 1088 780 1066 799 1055 curveto
828 1037 865 1035 891 1015 curveto
913 998 942 964 960 940 curveto
stroke
newpath 958 939 moveto
966 932 lineto
962 942 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
845 1064 moveto (?0.07 to 0.13 ) 76 14.00 -0.50 alignedtext
end grestore

%	completeRequirements=t
gsave 10 dict begin
gsave 10 dict begin
1238 284 moveto (completeRequirements) 128 14.00 -0.50 alignedtext
end grestore
end grestore

%	rand(rand173) -> completeRequirements=t
newpath 1006 162 moveto
1052 186 1142 234 1196 261 curveto
stroke
newpath 1196 258 moveto
1203 265 lineto
1193 262 lineto
closepath
gsave 0 setgray stroke grestore fill

%	completeRequirements=t -> rand(rand174)
newpath 1276 301 moveto
1313 320 1372 348 1408 365 curveto
stroke
newpath 1408 362 moveto
1416 369 lineto
1406 367 lineto
closepath
gsave 0 setgray stroke grestore fill

%	goodRequirements=t
gsave 10 dict begin
gsave 10 dict begin
1626 543 moveto (goodRequirements) 105 14.00 -0.50 alignedtext
end grestore
end grestore

%	rand(rand174) -> goodRequirements=t
newpath 1464 400 moveto
1497 429 1561 485 1598 517 curveto
stroke
newpath 1600 515 moveto
1605 524 lineto
1596 519 lineto
closepath
gsave 0 setgray stroke grestore fill

%	rand(rand183)
gsave 10 dict begin
gsave 10 dict begin
1733 697 moveto (rand) 24 14.00 -0.50 alignedtext
end grestore
end grestore

%	goodRequirements=t -> rand(rand183)
newpath 1639 560 moveto
1658 588 1695 640 1716 672 curveto
stroke
newpath 1717 668 moveto
1720 678 lineto
1712 671 lineto
closepath
gsave 0 setgray stroke grestore fill

%	designMeetsRequirementsReview=t
gsave 10 dict begin
gsave 10 dict begin
405 1123 moveto (designMeetsRequirementsReview) 191 14.00 -0.50 alignedtext
end grestore
end grestore

%	designMeetsRequirementsReview=t -> designReqReview=t
newpath 508 1122 moveto
553 1122 605 1122 645 1122 curveto
stroke
newpath 643 1120 moveto
653 1122 lineto
643 1125 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
584 1131 moveto ($3.5 to 6.5 ) 63 14.00 -0.50 alignedtext
end grestore

%	documentPreliminary&DetailedDesigns=t
gsave 10 dict begin
gsave 10 dict begin
405 1518 moveto (documentPreliminary&DetailedDesigns) 224 14.00 -0.50 alignedtext
end grestore
end grestore

%	documentDesign=t
gsave 10 dict begin
gsave 10 dict begin
711 1518 moveto (documentDesign) 94 14.00 -0.50 alignedtext
end grestore
end grestore

%	documentPreliminary&DetailedDesigns=t -> documentDesign=t
newpath 525 1517 moveto
567 1517 613 1517 649 1517 curveto
stroke
newpath 646 1515 moveto
656 1517 lineto
646 1520 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
584 1526 moveto ($7 to 13 ) 49 14.00 -0.50 alignedtext
end grestore

%	documentDesign=t -> rand(rand175)
newpath 744 1535 moveto
787 1557 860 1587 891 1559 curveto
924 1528 955 1458 969 1420 curveto
stroke
newpath 966 1420 moveto
972 1412 lineto
971 1422 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
845 1579 moveto (?0.21 to 0.39 ) 76 14.00 -0.50 alignedtext
end grestore

%	documentDesign=t -> rand(rand176)
newpath 731 1535 moveto
755 1556 793 1590 799 1593 curveto
836 1610 902 1625 944 1633 curveto
stroke
newpath 943 1630 moveto
952 1635 lineto
942 1635 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
845 1629 moveto (?0.21 to 0.39 ) 76 14.00 -0.50 alignedtext
end grestore

%	documentDesign=t -> rand(rand178)
newpath 743 1499 moveto
784 1475 854 1434 891 1404 curveto
902 1395 893 1376 898 1364 curveto
916 1325 948 1260 966 1225 curveto
stroke
newpath 963 1225 moveto
970 1218 lineto
967 1228 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
845 1474 moveto (?0.21 to 0.39 ) 76 14.00 -0.50 alignedtext
end grestore

%	documentDesign=t -> rand(rand180)
newpath 718 1499 moveto
733 1462 768 1381 799 1342 curveto
822 1313 874 1317 891 1286 curveto
901 1269 894 1188 898 1170 curveto
914 1103 953 989 971 939 curveto
stroke
newpath 968 941 moveto
973 932 lineto
973 942 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
845 1351 moveto (?0.07 to 0.13 ) 76 14.00 -0.50 alignedtext
end grestore

%	rany(rany47)
gsave 10 dict begin
gsave 10 dict begin
405 1324 moveto (rany) 24 14.00 -0.50 alignedtext
end grestore
end grestore

%	designReviews=t
gsave 10 dict begin
gsave 10 dict begin
711 1324 moveto (designReviews) 84 14.00 -0.50 alignedtext
end grestore
end grestore

%	rany(rany47) -> designReviews=t
newpath 432 1323 moveto
482 1323 586 1323 652 1323 curveto
stroke
newpath 651 1321 moveto
661 1323 lineto
651 1326 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
584 1332 moveto ($7 to 13 ) 49 14.00 -0.50 alignedtext
end grestore

%	designReviews=t -> rand(rand175)
newpath 744 1341 moveto
762 1350 784 1361 799 1365 curveto
837 1375 903 1385 944 1390 curveto
stroke
newpath 942 1387 moveto
952 1391 lineto
942 1392 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
845 1390 moveto (?0.21 to 0.39 ) 76 14.00 -0.50 alignedtext
end grestore

%	designReviews=t -> rand(rand176)
newpath 720 1341 moveto
737 1374 773 1445 792 1487 curveto
796 1493 793 1503 799 1507 curveto
828 1521 866 1516 891 1536 curveto
914 1552 943 1589 961 1614 curveto
stroke
newpath 963 1613 moveto
967 1622 lineto
959 1616 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
845 1545 moveto (?0.21 to 0.39 ) 76 14.00 -0.50 alignedtext
end grestore

%	designReviews=t -> rand(rand178)
newpath 734 1305 moveto
753 1290 780 1271 799 1263 curveto
837 1245 903 1223 944 1211 curveto
stroke
newpath 942 1209 moveto
952 1208 lineto
944 1214 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
845 1272 moveto (?0.07 to 0.13 ) 76 14.00 -0.50 alignedtext
end grestore

%	designReviews=t -> rand(rand180)
newpath 720 1305 moveto
737 1271 775 1196 792 1152 curveto
798 1137 787 1116 799 1107 curveto
825 1087 870 1101 891 1078 curveto
922 1045 953 977 969 940 curveto
stroke
newpath 966 940 moveto
972 932 lineto
971 942 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
845 1116 moveto (?0.07 to 0.13 ) 76 14.00 -0.50 alignedtext
end grestore

%	peerReviewsOnDesign=t
gsave 10 dict begin
gsave 10 dict begin
128 1378 moveto (peerReviewsOnDesign) 128 14.00 -0.50 alignedtext
end grestore
end grestore

%	peerReviewsOnDesign=t -> rany(rany47)
newpath 200 1363 moveto
254 1353 327 1338 369 1330 curveto
stroke
newpath 368 1328 moveto
378 1328 lineto
369 1333 lineto
closepath
gsave 0 setgray stroke grestore fill

%	conductFormalDesignInspections=t
gsave 10 dict begin
gsave 10 dict begin
128 1324 moveto (conductFormalDesignInspections) 188 14.00 -0.50 alignedtext
end grestore
end grestore

%	conductFormalDesignInspections=t -> rany(rany47)
newpath 229 1323 moveto
278 1323 335 1323 371 1323 curveto
stroke
newpath 368 1321 moveto
378 1323 lineto
368 1326 lineto
closepath
gsave 0 setgray stroke grestore fill

%	conductFormalDesignReviews=t
gsave 10 dict begin
gsave 10 dict begin
128 1270 moveto (conductFormalDesignReviews) 172 14.00 -0.50 alignedtext
end grestore
end grestore

%	conductFormalDesignReviews=t -> rany(rany47)
newpath 221 1287 moveto
272 1297 333 1309 370 1317 curveto
stroke
newpath 368 1314 moveto
378 1318 lineto
368 1319 lineto
closepath
gsave 0 setgray stroke grestore fill

%	createBaselineForDesign=t
gsave 10 dict begin
gsave 10 dict begin
405 1799 moveto (createBaselineForDesign) 140 14.00 -0.50 alignedtext
end grestore
end grestore

%	baselineDesign=t
gsave 10 dict begin
gsave 10 dict begin
711 1799 moveto (baselineDesign) 85 14.00 -0.50 alignedtext
end grestore
end grestore

%	createBaselineForDesign=t -> baselineDesign=t
newpath 482 1798 moveto
534 1798 603 1798 651 1798 curveto
stroke
newpath 651 1796 moveto
661 1798 lineto
651 1801 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
584 1807 moveto ($3.5 to 6.5 ) 63 14.00 -0.50 alignedtext
end grestore

%	baselineDesign=t -> rand(rand176)
newpath 761 1789 moveto
802 1780 860 1766 891 1748 curveto
917 1733 946 1693 963 1666 curveto
stroke
newpath 961 1665 moveto
968 1658 lineto
965 1668 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
845 1788 moveto (?0.07 to 0.13 ) 76 14.00 -0.50 alignedtext
end grestore

%	placeDesignUnderCM=t
gsave 10 dict begin
gsave 10 dict begin
405 1745 moveto (placeDesignUnderCM) 125 14.00 -0.50 alignedtext
end grestore
end grestore

%	cmForDesign=t
gsave 10 dict begin
gsave 10 dict begin
711 1745 moveto (cmForDesign) 76 14.00 -0.50 alignedtext
end grestore
end grestore

%	placeDesignUnderCM=t -> cmForDesign=t
newpath 475 1744 moveto
530 1744 605 1744 656 1744 curveto
stroke
newpath 656 1742 moveto
666 1744 lineto
656 1747 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
584 1753 moveto ($3.5 to 6.5 ) 63 14.00 -0.50 alignedtext
end grestore

%	cmForDesign=t -> rand(rand176)
newpath 756 1735 moveto
797 1727 856 1713 891 1700 curveto
908 1693 931 1678 949 1664 curveto
stroke
newpath 948 1662 moveto
957 1658 lineto
951 1666 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
845 1734 moveto (?0.07 to 0.13 ) 76 14.00 -0.50 alignedtext
end grestore

%	formalChangeControlForDesign=t
gsave 10 dict begin
gsave 10 dict begin
405 1691 moveto (formalChangeControlForDesign) 181 14.00 -0.50 alignedtext
end grestore
end grestore

%	designChangeControl=t
gsave 10 dict begin
gsave 10 dict begin
711 1691 moveto (designChangeControl) 122 14.00 -0.50 alignedtext
end grestore
end grestore

%	formalChangeControlForDesign=t -> designChangeControl=t
newpath 503 1690 moveto
546 1690 595 1690 635 1690 curveto
stroke
newpath 633 1688 moveto
643 1690 lineto
633 1693 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
584 1699 moveto ($3.5 to 6.5 ) 63 14.00 -0.50 alignedtext
end grestore

%	designChangeControl=t -> rand(rand176)
newpath 779 1681 moveto
817 1675 862 1668 891 1663 curveto
905 1660 925 1655 943 1651 curveto
stroke
newpath 942 1649 moveto
952 1648 lineto
943 1654 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
845 1686 moveto (?0.07 to 0.13 ) 76 14.00 -0.50 alignedtext
end grestore

%	meetSpecs=t
gsave 10 dict begin
gsave 10 dict begin
1238 1395 moveto (meetSpecs) 59 14.00 -0.50 alignedtext
end grestore
end grestore

%	rand(rand175) -> meetSpecs=t
newpath 1006 1394 moveto
1051 1394 1140 1394 1194 1394 curveto
stroke
newpath 1191 1392 moveto
1201 1394 lineto
1191 1397 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1113 1403 moveto ($3.5 to 6.5 ) 63 14.00 -0.50 alignedtext
end grestore

%	rand(rand177)
gsave 10 dict begin
gsave 10 dict begin
1443 1395 moveto (rand) 24 14.00 -0.50 alignedtext
end grestore
end grestore

%	meetSpecs=t -> rand(rand177)
newpath 1275 1394 moveto
1313 1394 1372 1394 1408 1394 curveto
stroke
newpath 1406 1392 moveto
1416 1394 lineto
1406 1397 lineto
closepath
gsave 0 setgray stroke grestore fill

%	achievableDesign=t
gsave 10 dict begin
gsave 10 dict begin
1238 1497 moveto (achievableDesign) 99 14.00 -0.50 alignedtext
end grestore
end grestore

%	rand(rand176) -> achievableDesign=t
newpath 1006 1625 moveto
1052 1599 1145 1548 1199 1518 curveto
stroke
newpath 1196 1517 moveto
1206 1514 lineto
1199 1521 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1113 1600 moveto ($3.5 to 6.5 ) 63 14.00 -0.50 alignedtext
end grestore

%	achievableDesign=t -> rand(rand177)
newpath 1274 1478 moveto
1312 1459 1371 1430 1408 1411 curveto
stroke
newpath 1406 1409 moveto
1416 1407 lineto
1408 1414 lineto
closepath
gsave 0 setgray stroke grestore fill

%	goodDesign=t
gsave 10 dict begin
gsave 10 dict begin
1626 932 moveto (goodDesign) 67 14.00 -0.50 alignedtext
end grestore
end grestore

%	rand(rand177) -> goodDesign=t
newpath 1450 1376 moveto
1478 1304 1583 1039 1616 956 curveto
stroke
newpath 1613 957 moveto
1619 949 lineto
1617 959 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1516 1316 moveto ($3.5 to 6.5 ) 63 14.00 -0.50 alignedtext
end grestore

%	goodDesign=t -> rand(rand183)
newpath 1634 913 moveto
1653 872 1698 773 1721 724 curveto
stroke
newpath 1719 722 moveto
1725 714 lineto
1724 724 lineto
closepath
gsave 0 setgray stroke grestore fill

%	rany(rany48)
gsave 10 dict begin
gsave 10 dict begin
405 655 moveto (rany) 24 14.00 -0.50 alignedtext
end grestore
end grestore

%	codeReviews=t
gsave 10 dict begin
gsave 10 dict begin
711 655 moveto (codeReviews) 74 14.00 -0.50 alignedtext
end grestore
end grestore

%	rany(rany48) -> codeReviews=t
newpath 432 654 moveto
483 654 593 654 658 654 curveto
stroke
newpath 657 652 moveto
667 654 lineto
657 657 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
584 663 moveto ($10 to 20 ) 56 14.00 -0.50 alignedtext
end grestore

%	codeReviews=t -> rand(rand178)
newpath 723 672 moveto
745 707 792 780 792 780 curveto
803 837 784 1073 799 1130 curveto
808 1160 862 1136 891 1148 curveto
906 1154 927 1166 944 1177 curveto
stroke
newpath 945 1175 moveto
952 1182 lineto
942 1179 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
845 1157 moveto (?0.21 to 0.39 ) 76 14.00 -0.50 alignedtext
end grestore

%	rand(rand179)
gsave 10 dict begin
gsave 10 dict begin
979 681 moveto (rand) 24 14.00 -0.50 alignedtext
end grestore
end grestore

%	codeReviews=t -> rand(rand179)
newpath 755 645 moveto
796 638 856 630 891 639 curveto
905 642 926 652 943 660 curveto
stroke
newpath 944 658 moveto
952 665 lineto
942 662 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
845 648 moveto (?0.21 to 0.39 ) 76 14.00 -0.50 alignedtext
end grestore

%	codeReviews=t -> rand(rand180)
newpath 723 672 moveto
742 699 775 749 792 780 curveto
797 788 791 802 799 807 curveto
827 822 864 819 891 836 curveto
911 848 937 871 956 890 curveto
stroke
newpath 957 887 moveto
962 896 lineto
953 891 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
845 845 moveto (?0.63 to 1.17 ) 76 14.00 -0.50 alignedtext
end grestore

%	rand(rand182)
gsave 10 dict begin
gsave 10 dict begin
1443 602 moveto (rand) 24 14.00 -0.50 alignedtext
end grestore
end grestore

%	codeReviews=t -> rand(rand182)
newpath 755 638 moveto
771 633 787 629 799 628 curveto
976 614 1298 605 1407 602 curveto
stroke
newpath 1406 600 moveto
1416 602 lineto
1406 605 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1113 624 moveto (?0.07 to 0.13 ) 76 14.00 -0.50 alignedtext
end grestore

%	conductCodeWalkthrough=t
gsave 10 dict begin
gsave 10 dict begin
128 628 moveto (conductCodeWalkthrough) 147 14.00 -0.50 alignedtext
end grestore
end grestore

%	conductCodeWalkthrough=t -> rany(rany48)
newpath 209 635 moveto
262 641 329 647 370 650 curveto
stroke
newpath 368 647 moveto
378 651 lineto
368 652 lineto
closepath
gsave 0 setgray stroke grestore fill

%	conductCodeReview=t
gsave 10 dict begin
gsave 10 dict begin
128 682 moveto (conductCodeReview) 116 14.00 -0.50 alignedtext
end grestore
end grestore

%	conductCodeReview=t -> rany(rany48)
newpath 193 675 moveto
248 669 324 662 369 658 curveto
stroke
newpath 368 656 moveto
378 657 lineto
368 661 lineto
closepath
gsave 0 setgray stroke grestore fill

%	feasibleDesignToCode=t
gsave 10 dict begin
gsave 10 dict begin
1238 970 moveto (feasibleDesignToCode) 128 14.00 -0.50 alignedtext
end grestore
end grestore

%	rand(rand178) -> feasibleDesignToCode=t
newpath 999 1182 moveto
1045 1140 1158 1039 1211 993 curveto
stroke
newpath 1209 992 moveto
1218 987 lineto
1212 995 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1113 1130 moveto ($10 to 20 ) 56 14.00 -0.50 alignedtext
end grestore

%	rand(rand181)
gsave 10 dict begin
gsave 10 dict begin
1443 738 moveto (rand) 24 14.00 -0.50 alignedtext
end grestore
end grestore

%	feasibleDesignToCode=t -> rand(rand181)
newpath 1255 951 moveto
1289 914 1367 831 1409 783 curveto
1413 778 1420 770 1426 761 curveto
stroke
newpath 1422 762 moveto
1430 755 lineto
1427 765 lineto
closepath
gsave 0 setgray stroke grestore fill

%	testPlansDocumented=t
gsave 10 dict begin
gsave 10 dict begin
405 890 moveto (testPlansDocumented) 121 14.00 -0.50 alignedtext
end grestore
end grestore

%	testPlans=t
gsave 10 dict begin
gsave 10 dict begin
711 890 moveto (testPlans) 49 14.00 -0.50 alignedtext
end grestore
end grestore

%	testPlansDocumented=t -> testPlans=t
newpath 473 889 moveto
533 889 618 889 669 889 curveto
stroke
newpath 669 887 moveto
679 889 lineto
669 892 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
584 898 moveto ($14 to 26 ) 56 14.00 -0.50 alignedtext
end grestore

%	testPlans=t -> rand(rand179)
newpath 743 876 moveto
762 867 784 854 792 840 curveto
801 826 789 755 799 743 curveto
819 717 861 724 891 714 curveto
905 709 926 701 943 694 curveto
stroke
newpath 942 692 moveto
952 691 lineto
943 697 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
845 752 moveto (?0.21 to 0.39 ) 76 14.00 -0.50 alignedtext
end grestore

%	testPlans=t -> rand(rand180)
newpath 743 899 moveto
762 904 784 909 799 911 curveto
838 915 904 915 944 914 curveto
stroke
newpath 942 912 moveto
952 914 lineto
942 917 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
845 922 moveto (?0.07 to 0.13 ) 76 14.00 -0.50 alignedtext
end grestore

%	unitTestConducted=t
gsave 10 dict begin
gsave 10 dict begin
405 811 moveto (unitTestConducted) 106 14.00 -0.50 alignedtext
end grestore
end grestore

%	unitTest=t
gsave 10 dict begin
gsave 10 dict begin
711 811 moveto (unitTest) 45 14.00 -0.50 alignedtext
end grestore
end grestore

%	unitTestConducted=t -> unitTest=t
newpath 466 810 moveto
527 810 618 810 670 810 curveto
stroke
newpath 671 808 moveto
681 810 lineto
671 813 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
584 819 moveto ($14 to 26 ) 56 14.00 -0.50 alignedtext
end grestore

%	unitTest=t -> rand(rand179)
newpath 720 792 moveto
735 762 767 706 799 691 curveto
835 673 902 674 944 676 curveto
stroke
newpath 942 673 moveto
952 677 lineto
942 678 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
845 700 moveto (?0.63 to 1.17 ) 76 14.00 -0.50 alignedtext
end grestore

%	unitTest=t -> rand(rand180)
newpath 741 828 moveto
759 839 783 852 799 859 curveto
837 873 903 892 944 904 curveto
stroke
newpath 943 901 moveto
952 906 lineto
942 906 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
845 897 moveto (?0.21 to 0.39 ) 76 14.00 -0.50 alignedtext
end grestore

%	goodTesting=t
gsave 10 dict begin
gsave 10 dict begin
1238 681 moveto (goodTesting) 70 14.00 -0.50 alignedtext
end grestore
end grestore

%	rand(rand179) -> goodTesting=t
newpath 1006 680 moveto
1050 680 1134 680 1189 680 curveto
stroke
newpath 1186 678 moveto
1196 680 lineto
1186 683 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1113 689 moveto ($14 to 26 ) 56 14.00 -0.50 alignedtext
end grestore

%	goodTesting=t -> rand(rand181)
newpath 1280 692 moveto
1318 702 1373 718 1409 727 curveto
stroke
newpath 1407 724 moveto
1416 729 lineto
1406 729 lineto
closepath
gsave 0 setgray stroke grestore fill

%	goodTesting=t -> rand(rand182)
newpath 1280 664 moveto
1318 649 1373 628 1409 614 curveto
stroke
newpath 1406 613 moveto
1416 611 lineto
1408 617 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1363 658 moveto (?0.07 to 0.13 ) 76 14.00 -0.50 alignedtext
end grestore

%	goodCoding=t
gsave 10 dict begin
gsave 10 dict begin
1238 814 moveto (goodCoding) 69 14.00 -0.50 alignedtext
end grestore
end grestore

%	rand(rand180) -> goodCoding=t
newpath 1006 903 moveto
1050 886 1135 853 1189 832 curveto
stroke
newpath 1186 831 moveto
1196 829 lineto
1188 835 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1113 888 moveto ($14 to 26 ) 56 14.00 -0.50 alignedtext
end grestore

%	goodCoding=t -> rand(rand181)
newpath 1280 797 moveto
1318 783 1373 763 1409 750 curveto
stroke
newpath 1406 749 moveto
1416 747 lineto
1408 753 lineto
closepath
gsave 0 setgray stroke grestore fill

%	goodImplemenation=t
gsave 10 dict begin
gsave 10 dict begin
1626 726 moveto (goodImplemenation) 112 14.00 -0.50 alignedtext
end grestore
end grestore

%	rand(rand181) -> goodImplemenation=t
newpath 1470 735 moveto
1491 734 1523 732 1552 730 curveto
stroke
newpath 1552 728 moveto
1562 729 lineto
1552 732 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1516 743 moveto ($14 to 26 ) 56 14.00 -0.50 alignedtext
end grestore

%	goodImplemenation=t -> rand(rand183)
newpath 1690 708 moveto
1692 708 1695 707 1697 706 curveto
stroke
newpath 1696 704 moveto
1706 704 lineto
1697 709 lineto
closepath
gsave 0 setgray stroke grestore fill

%	conductSystemIntegration=t
gsave 10 dict begin
gsave 10 dict begin
979 531 moveto (conductSystemIntegration) 146 14.00 -0.50 alignedtext
end grestore
end grestore

%	systemIntegration=t
gsave 10 dict begin
gsave 10 dict begin
1238 534 moveto (systemIntegration) 100 14.00 -0.50 alignedtext
end grestore
end grestore

%	conductSystemIntegration=t -> systemIntegration=t
newpath 1060 531 moveto
1096 532 1139 532 1174 532 curveto
stroke
newpath 1171 530 moveto
1181 532 lineto
1171 535 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1113 541 moveto ($14 to 26 ) 56 14.00 -0.50 alignedtext
end grestore

%	systemIntegration=t -> rand(rand182)
newpath 1295 534 moveto
1333 535 1380 539 1409 549 curveto
1419 552 1427 564 1433 577 curveto
stroke
newpath 1434 573 moveto
1436 583 lineto
1429 575 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1363 558 moveto (?0.63 to 1.17 ) 76 14.00 -0.50 alignedtext
end grestore

%	goodIntegration=t
gsave 10 dict begin
gsave 10 dict begin
1626 670 moveto (goodIntegration) 89 14.00 -0.50 alignedtext
end grestore
end grestore

%	rand(rand182) -> goodIntegration=t
newpath 1470 611 moveto
1496 621 1537 636 1570 648 curveto
stroke
newpath 1569 645 moveto
1577 651 lineto
1567 649 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1516 651 moveto ($14 to 26 ) 56 14.00 -0.50 alignedtext
end grestore

%	goodIntegration=t -> rand(rand183)
newpath 1678 682 moveto
1685 683 1691 685 1697 687 curveto
stroke
newpath 1697 684 moveto
1706 689 lineto
1696 689 lineto
closepath
gsave 0 setgray stroke grestore fill

%	goodProject=t
gsave 10 dict begin
gsave 10 dict begin
1885 697 moveto (goodProject) 67 14.00 -0.50 alignedtext
end grestore
end grestore

%	rand(rand183) -> goodProject=t
newpath 1760 696 moveto
1780 696 1809 696 1834 696 curveto
stroke
newpath 1834 694 moveto
1844 696 lineto
1834 699 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1802 705 moveto ($14 to 26 ) 56 14.00 -0.50 alignedtext
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1
%%Trailer
%%Pages: 1
end
restore
%%EOF

%%EndDocument
 @endspecial 515 4113 a Fh(Each)17 b(edge)h(has)f(cost)h(0)f(and)g
(chances)i(1)e(unless)g(otherwise)i(mark)o(ed.)j(Marks:)g($=)17
b(cost;)h(?=)g(chances;)1926 5255 y Fk(3)p eop
%%Page: 4 4
4 3 bop 515 523 a Fm(3)119 b(CHEET)-11 b(AH)515 725 y
Fj(3.1)99 b(One)25 b(run)515 860 y Fi
(data\(-1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1,1,1)o(,1,1,1,)o(1,1,1,1)o(,1)
674 939 y(,-1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1)o(,1,1)674
1018 y(,1.0915,1,17.846,1,5.4965,1,29.803,1,78.112,1)o(,0,1,0)674
1097 y(,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,)o(0,0,0)674
1176 y(,0,1,3.7622,1,12.7972,1,9.283,1,4.9655,1,4.90)o(34,1)674
1254 y(,4.2182,1,4.2935,1,0,0,0,0,4.3097,1,0,0,0,0,0)o(,0,0)674
1333 y(,0,0,0,5.6543,1,13.118,1,14.942,1,0,0,0,0,0,0)o(,0,0)674
1412 y(,19.4048,1,21.5468,1,21.0644,1,0,0,0,0,0,0,25)o(.0856)674
1491 y(,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23.834,1,21.81)o(56)674
1570 y(,1,18.6344,1,0,0,0,0,0,0,17.1632,1,sum,lohi\).)515
1649 y(..)515 1886 y Fj(3.2)99 b(1000)24 b(runs)515 2142
y
 currentpoint currentpoint translate 0.5 0.5 scale neg exch neg exch
translate
 515 2142 a 515 2142 a
 gsave currentpoint currentpoint translate 270 neg rotate neg exch
neg exch translate
 515 2142 a @beginspecial 302
@llx 50 @lly 554 @urx 410 @ury 2520 @rwi @setspecial
%%BeginDocument: dat.eps
%!PS-Adobe-2.0
%%Title: dat.eps
%%Creator: gnuplot 3.7 patchlevel 1
%%CreationDate: Mon Apr 16 15:20:56 2001
%%DocumentFonts: (atend)
%%BoundingBox: 302 50 554 410
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -46 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def
/AL { stroke userlinewidth 2 div setlinewidth } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
714 420 M
63 0 V
2585 0 R
-63 0 V
630 420 M
(-140) Rshow
714 630 M
63 0 V
2585 0 R
-63 0 V
630 630 M
(-130) Rshow
714 840 M
63 0 V
2585 0 R
-63 0 V
630 840 M
(-120) Rshow
714 1050 M
63 0 V
2585 0 R
-63 0 V
-2669 0 R
(-110) Rshow
714 1260 M
63 0 V
2585 0 R
-63 0 V
-2669 0 R
(-100) Rshow
714 1470 M
63 0 V
2585 0 R
-63 0 V
-2669 0 R
(-90) Rshow
714 1680 M
63 0 V
2585 0 R
-63 0 V
-2669 0 R
(-80) Rshow
714 1890 M
63 0 V
2585 0 R
-63 0 V
-2669 0 R
(-70) Rshow
714 2100 M
63 0 V
2585 0 R
-63 0 V
-2669 0 R
(-60) Rshow
714 420 M
0 63 V
0 1617 R
0 -63 V
714 280 M
(320) Cshow
1092 420 M
0 63 V
0 1617 R
0 -63 V
0 -1757 R
(340) Cshow
1471 420 M
0 63 V
0 1617 R
0 -63 V
0 -1757 R
(360) Cshow
1849 420 M
0 63 V
0 1617 R
0 -63 V
0 -1757 R
(380) Cshow
2227 420 M
0 63 V
0 1617 R
0 -63 V
0 -1757 R
(400) Cshow
2605 420 M
0 63 V
0 1617 R
0 -63 V
0 -1757 R
(420) Cshow
2984 420 M
0 63 V
0 1617 R
0 -63 V
0 -1757 R
(440) Cshow
3362 420 M
0 63 V
0 1617 R
0 -63 V
0 -1757 R
(460) Cshow
1.000 UL
LTb
714 420 M
2648 0 V
0 1680 V
-2648 0 V
714 420 L
140 1260 M
currentpoint gsave translate 90 rotate 0 0 M
(log\(chances\)) Cshow
grestore
2038 70 M
(cost) Cshow
2038 2310 M
(ART1: 1000 runs- variations=0; Apr-0-4-01) Cshow
1.000 UP
1.000 UL
LT0
2132 1773 Pls
1795 1320 Pls
1916 1774 Pls
2211 1392 Pls
2059 1480 Pls
2184 1673 Pls
2299 1723 Pls
2004 1693 Pls
2143 1778 Pls
1916 1632 Pls
2148 1821 Pls
1932 1653 Pls
2041 1715 Pls
1849 1865 Pls
2010 1351 Pls
2032 1676 Pls
2072 1343 Pls
1993 1264 Pls
2060 1872 Pls
2167 1157 Pls
1989 1444 Pls
2138 1502 Pls
2094 1836 Pls
1935 1680 Pls
2133 1211 Pls
2105 1640 Pls
1971 1726 Pls
2093 1482 Pls
2016 1599 Pls
2105 1269 Pls
2053 1846 Pls
2099 1604 Pls
2056 1861 Pls
2228 1571 Pls
2093 1755 Pls
2081 1414 Pls
1927 1547 Pls
2114 1449 Pls
2111 1726 Pls
2197 1173 Pls
2054 1630 Pls
1892 1789 Pls
2004 1682 Pls
2072 1607 Pls
1921 1313 Pls
1945 1621 Pls
1963 1852 Pls
2067 1222 Pls
2135 1253 Pls
2194 1299 Pls
1956 1679 Pls
1808 1582 Pls
2109 1609 Pls
1954 1348 Pls
2115 1561 Pls
2191 1449 Pls
1955 1536 Pls
2227 1477 Pls
2023 1791 Pls
2021 1465 Pls
2084 1711 Pls
2091 1434 Pls
2191 1382 Pls
2007 1689 Pls
2106 1405 Pls
2034 1544 Pls
1950 1180 Pls
2331 1503 Pls
2147 1424 Pls
2096 1591 Pls
1956 1308 Pls
2117 1304 Pls
2207 1868 Pls
2072 1817 Pls
1989 1854 Pls
2015 1625 Pls
2036 1581 Pls
2095 1351 Pls
2110 1514 Pls
2091 1858 Pls
1910 1098 Pls
2194 1526 Pls
2072 1480 Pls
2107 1486 Pls
2148 1680 Pls
2116 1291 Pls
2176 1643 Pls
1789 1647 Pls
2023 1062 Pls
2130 1473 Pls
1908 1592 Pls
2014 1618 Pls
2084 1832 Pls
1984 1464 Pls
1953 1701 Pls
2076 1575 Pls
2005 1976 Pls
2143 1576 Pls
2180 1306 Pls
2164 1536 Pls
1916 1481 Pls
2060 1780 Pls
2109 1659 Pls
2065 1314 Pls
1960 1633 Pls
2079 1467 Pls
1966 1833 Pls
2117 1324 Pls
1962 1760 Pls
1893 1744 Pls
2013 1727 Pls
2183 1703 Pls
2142 1671 Pls
2189 1208 Pls
2231 1406 Pls
1990 1537 Pls
2092 1784 Pls
2041 1631 Pls
1984 1811 Pls
2016 1684 Pls
2133 1650 Pls
2096 897 Pls
2177 1741 Pls
2190 1653 Pls
1985 1684 Pls
2137 1533 Pls
2059 1497 Pls
1949 1960 Pls
2030 2000 Pls
2037 1703 Pls
2141 1651 Pls
1931 1849 Pls
1983 1671 Pls
1976 1311 Pls
2117 1607 Pls
2014 1266 Pls
1885 1342 Pls
2148 1545 Pls
2234 1658 Pls
2071 1607 Pls
2092 1123 Pls
1919 1740 Pls
2240 1717 Pls
2112 1378 Pls
2209 1492 Pls
2143 1486 Pls
2140 1896 Pls
2142 1457 Pls
1849 1224 Pls
2105 1485 Pls
1988 1536 Pls
1954 1659 Pls
2110 1521 Pls
2100 1888 Pls
2132 1784 Pls
1983 1746 Pls
2116 1672 Pls
2157 1855 Pls
2193 1319 Pls
2067 1772 Pls
1947 1605 Pls
2234 900 Pls
1979 1630 Pls
1890 1419 Pls
2085 1554 Pls
2141 1744 Pls
2084 1638 Pls
2162 1666 Pls
2078 1691 Pls
2016 1404 Pls
1949 1894 Pls
2097 1625 Pls
1940 1817 Pls
2259 1897 Pls
2102 1352 Pls
1939 1645 Pls
1991 1308 Pls
2063 1856 Pls
2157 1845 Pls
1935 1594 Pls
2067 1411 Pls
1998 1754 Pls
2094 1641 Pls
2012 1551 Pls
2170 1363 Pls
2058 862 Pls
1998 1482 Pls
1922 1663 Pls
1946 1753 Pls
2020 1494 Pls
2155 1633 Pls
2060 1055 Pls
2227 1488 Pls
2059 1740 Pls
1992 1702 Pls
2073 1848 Pls
1999 1475 Pls
2046 1413 Pls
2064 1917 Pls
1917 1713 Pls
2044 1614 Pls
2246 1416 Pls
1864 1229 Pls
1846 1632 Pls
2065 1424 Pls
2041 1687 Pls
2218 1416 Pls
2005 1784 Pls
2155 1185 Pls
2119 1400 Pls
2144 1834 Pls
2130 1594 Pls
2132 1811 Pls
2153 1733 Pls
1942 1676 Pls
2097 1612 Pls
2013 1119 Pls
2187 1885 Pls
1989 1489 Pls
2224 1829 Pls
1987 1147 Pls
2102 1489 Pls
2065 1502 Pls
1909 1589 Pls
2150 1399 Pls
2092 1204 Pls
2112 1842 Pls
2028 1714 Pls
2033 1021 Pls
1922 1578 Pls
2027 1424 Pls
2127 1304 Pls
2177 1768 Pls
2332 1995 Pls
2041 1290 Pls
1918 1939 Pls
2113 1490 Pls
1993 1566 Pls
1976 1552 Pls
2164 1935 Pls
2110 1702 Pls
1895 1561 Pls
1802 1802 Pls
1994 1525 Pls
1942 1787 Pls
2120 1327 Pls
1968 1498 Pls
2097 1828 Pls
2061 1302 Pls
2254 1682 Pls
2142 1709 Pls
2156 1390 Pls
2104 1860 Pls
2288 1461 Pls
2024 1055 Pls
2034 2000 Pls
1872 1117 Pls
2062 1652 Pls
2017 1894 Pls
2073 1801 Pls
2151 1248 Pls
2211 1737 Pls
2082 1073 Pls
1917 1248 Pls
2208 1498 Pls
2118 1793 Pls
2077 1636 Pls
2093 1517 Pls
2010 1527 Pls
2018 1481 Pls
2029 1597 Pls
2049 1697 Pls
2063 1848 Pls
1983 1564 Pls
2247 1549 Pls
1951 1852 Pls
2123 1762 Pls
2060 1772 Pls
2252 1277 Pls
2112 1852 Pls
2253 1520 Pls
2156 1830 Pls
2052 1473 Pls
1950 1296 Pls
2113 1627 Pls
2131 1780 Pls
2191 1629 Pls
2223 1554 Pls
2110 1358 Pls
1905 1649 Pls
2081 1644 Pls
1912 1323 Pls
2137 1704 Pls
1878 1487 Pls
1965 1539 Pls
2061 1485 Pls
2000 1293 Pls
2078 1622 Pls
2216 1317 Pls
1905 1143 Pls
2117 1448 Pls
1937 1530 Pls
2024 1816 Pls
2067 1953 Pls
1976 1756 Pls
2096 1659 Pls
2310 1783 Pls
2158 1343 Pls
2159 1524 Pls
2028 1481 Pls
2155 1502 Pls
2036 1524 Pls
2041 1551 Pls
2134 1471 Pls
2086 1910 Pls
1968 1859 Pls
2081 1622 Pls
1852 1653 Pls
1997 1525 Pls
2145 1276 Pls
1960 1343 Pls
2104 1644 Pls
2165 1500 Pls
2056 1668 Pls
2146 1829 Pls
2269 1657 Pls
2050 1823 Pls
1973 987 Pls
2229 1337 Pls
1996 1601 Pls
1897 1486 Pls
2112 1883 Pls
2079 1468 Pls
1837 1475 Pls
1975 1447 Pls
2080 1818 Pls
1916 1655 Pls
2188 1812 Pls
2254 1998 Pls
2252 1586 Pls
1998 1325 Pls
2074 1393 Pls
2254 1203 Pls
1906 1618 Pls
2035 1542 Pls
2205 1789 Pls
2072 1591 Pls
1945 1649 Pls
2108 1406 Pls
2089 1685 Pls
2107 1171 Pls
1949 1609 Pls
2079 1832 Pls
1990 1564 Pls
2207 1661 Pls
1944 1803 Pls
1974 1713 Pls
2079 1485 Pls
1989 1416 Pls
2125 1285 Pls
2161 1540 Pls
1974 1510 Pls
2071 1539 Pls
1981 1992 Pls
2156 1254 Pls
2080 1766 Pls
2040 1499 Pls
2091 1863 Pls
2128 1733 Pls
1965 1308 Pls
1978 1749 Pls
2025 1839 Pls
2001 1621 Pls
2127 1275 Pls
2210 1720 Pls
2098 1732 Pls
1947 1746 Pls
1983 1006 Pls
2136 1213 Pls
2153 1755 Pls
2203 1807 Pls
2256 1734 Pls
2106 1668 Pls
1978 1748 Pls
1970 1683 Pls
2082 1373 Pls
1883 1804 Pls
2274 1423 Pls
1852 1181 Pls
2178 1803 Pls
2104 1300 Pls
1910 1916 Pls
2053 1650 Pls
1911 1895 Pls
2208 1709 Pls
2075 1398 Pls
2130 1653 Pls
2237 1836 Pls
2126 1376 Pls
2102 1850 Pls
2095 1049 Pls
2191 1475 Pls
2017 1614 Pls
2171 1813 Pls
1935 1702 Pls
2069 1735 Pls
2018 1389 Pls
1982 1816 Pls
2013 1455 Pls
2036 1445 Pls
1850 857 Pls
2058 1153 Pls
1885 1403 Pls
1944 1637 Pls
2047 1522 Pls
1874 1695 Pls
1876 1481 Pls
1973 1989 Pls
1978 1807 Pls
2177 1780 Pls
2145 1608 Pls
1812 1564 Pls
2199 1643 Pls
1979 1204 Pls
2223 1611 Pls
2153 1959 Pls
2057 1779 Pls
2177 1769 Pls
2069 1762 Pls
1975 1852 Pls
1950 1462 Pls
1985 1492 Pls
2097 1569 Pls
2056 1665 Pls
2057 1492 Pls
2158 1198 Pls
2040 1938 Pls
1940 1537 Pls
2132 1480 Pls
2124 1815 Pls
1974 1445 Pls
1873 1433 Pls
1977 1788 Pls
2149 1640 Pls
2147 1649 Pls
2212 1982 Pls
2060 1684 Pls
1967 1410 Pls
1996 1373 Pls
1957 1668 Pls
2145 1692 Pls
2063 1391 Pls
2114 1717 Pls
1961 1427 Pls
2078 1555 Pls
2010 1893 Pls
2185 1380 Pls
1961 1332 Pls
2077 1436 Pls
2111 1602 Pls
2024 1479 Pls
1880 1711 Pls
2186 1931 Pls
2110 1418 Pls
2047 1384 Pls
1944 1279 Pls
2072 1698 Pls
2140 1541 Pls
2247 1757 Pls
2241 1675 Pls
2006 1515 Pls
2064 1587 Pls
2010 1775 Pls
2152 1251 Pls
1895 1786 Pls
2024 1786 Pls
2000 1423 Pls
2048 1957 Pls
1974 1556 Pls
1983 1390 Pls
1995 1289 Pls
2056 1877 Pls
1984 1607 Pls
2162 1442 Pls
1990 1685 Pls
2257 1373 Pls
1938 1485 Pls
2047 1669 Pls
2077 1533 Pls
2159 1404 Pls
2058 1773 Pls
2051 1240 Pls
2222 1497 Pls
1722 1788 Pls
1935 1844 Pls
2030 1557 Pls
2097 1883 Pls
2109 1255 Pls
1963 1825 Pls
1985 1370 Pls
2050 1790 Pls
2026 1626 Pls
2102 1829 Pls
2097 1399 Pls
1921 1692 Pls
2035 1592 Pls
2238 1511 Pls
1968 1649 Pls
2010 1099 Pls
2044 1272 Pls
2046 1551 Pls
2129 1747 Pls
2014 1695 Pls
2187 1692 Pls
2028 1424 Pls
2005 922 Pls
2051 1918 Pls
2114 1585 Pls
2103 1912 Pls
2025 1717 Pls
2006 1798 Pls
1893 1356 Pls
2123 1677 Pls
2276 1884 Pls
1916 1411 Pls
2074 1876 Pls
1856 1817 Pls
2116 1234 Pls
2037 1369 Pls
2051 1882 Pls
1952 1700 Pls
1991 1662 Pls
1897 1223 Pls
2130 1430 Pls
2025 1060 Pls
2088 1727 Pls
2092 1639 Pls
1968 1810 Pls
2240 1585 Pls
2102 1717 Pls
2159 1773 Pls
2125 1737 Pls
2209 1801 Pls
2114 1617 Pls
1888 1791 Pls
2077 1755 Pls
2041 1642 Pls
2037 1460 Pls
2044 1552 Pls
2096 1686 Pls
2045 1484 Pls
1754 1815 Pls
2096 1539 Pls
2107 1407 Pls
2044 1699 Pls
1976 1949 Pls
2038 1449 Pls
2153 1934 Pls
2247 1505 Pls
1960 1399 Pls
1950 1980 Pls
1872 1887 Pls
2240 1517 Pls
2164 1766 Pls
2001 1001 Pls
2200 1866 Pls
2138 1935 Pls
2016 1550 Pls
1819 1153 Pls
1975 1577 Pls
2160 1484 Pls
1925 1563 Pls
2205 1721 Pls
2167 1478 Pls
2208 1665 Pls
2031 1551 Pls
2142 1407 Pls
2062 1238 Pls
2098 1067 Pls
1877 1812 Pls
1882 1891 Pls
2100 1289 Pls
2197 1777 Pls
2095 1889 Pls
1909 1465 Pls
2161 1706 Pls
1909 1521 Pls
2054 1722 Pls
2092 1002 Pls
2250 1506 Pls
1946 1564 Pls
1967 1871 Pls
2082 1673 Pls
1965 1372 Pls
2121 1441 Pls
1943 1670 Pls
2118 1702 Pls
2092 1767 Pls
1953 1933 Pls
2224 1784 Pls
2069 1709 Pls
2036 1654 Pls
2121 1613 Pls
2084 1621 Pls
1854 1364 Pls
2038 1603 Pls
1806 1663 Pls
2159 1725 Pls
2109 1420 Pls
2017 1790 Pls
1914 1269 Pls
2062 1644 Pls
2151 1826 Pls
2093 1741 Pls
2112 1589 Pls
2133 1603 Pls
2153 1786 Pls
1944 1667 Pls
2099 1375 Pls
1854 1729 Pls
2017 1095 Pls
2128 1785 Pls
2107 1536 Pls
1878 1437 Pls
2072 1627 Pls
1970 2018 Pls
2024 1189 Pls
1954 1486 Pls
2046 1798 Pls
1831 1641 Pls
2136 1799 Pls
1921 1657 Pls
2267 1725 Pls
2003 1706 Pls
2226 1381 Pls
2089 1519 Pls
2142 1191 Pls
2051 1621 Pls
1981 1545 Pls
1945 1737 Pls
2089 1916 Pls
2070 1655 Pls
2078 1356 Pls
2027 1327 Pls
2178 1547 Pls
2134 1633 Pls
2075 1997 Pls
1956 1643 Pls
2151 1476 Pls
2109 2025 Pls
2020 1241 Pls
2153 1766 Pls
2100 1748 Pls
2155 1224 Pls
2096 1937 Pls
2004 1659 Pls
2021 1666 Pls
2050 1139 Pls
2019 1721 Pls
2117 1745 Pls
1913 1786 Pls
2252 1685 Pls
2229 1232 Pls
2018 1723 Pls
2163 1704 Pls
2055 1860 Pls
2092 2089 Pls
2137 1660 Pls
1964 1871 Pls
2069 1770 Pls
2208 1864 Pls
2057 1656 Pls
1962 1674 Pls
2101 1299 Pls
1908 1267 Pls
1926 1324 Pls
2194 951 Pls
2171 1896 Pls
2264 1803 Pls
1993 1840 Pls
2211 1139 Pls
1930 1503 Pls
1899 1347 Pls
2139 1632 Pls
2133 1261 Pls
2152 1707 Pls
2001 1708 Pls
1887 1715 Pls
2057 1637 Pls
2013 1836 Pls
1905 1396 Pls
2020 1669 Pls
2126 1543 Pls
2077 1673 Pls
2091 1745 Pls
2085 1512 Pls
1922 1595 Pls
2119 1543 Pls
2102 1764 Pls
1905 1897 Pls
2002 1660 Pls
2112 1075 Pls
2172 1778 Pls
2147 1508 Pls
2011 1235 Pls
2013 1642 Pls
2046 1404 Pls
2078 1509 Pls
1898 1661 Pls
1953 1652 Pls
1886 1557 Pls
1959 1381 Pls
2077 1421 Pls
1995 1570 Pls
2045 1655 Pls
1851 1733 Pls
2031 1484 Pls
1952 1381 Pls
2076 1227 Pls
1984 1903 Pls
2084 1850 Pls
1777 1677 Pls
1892 1564 Pls
2175 1463 Pls
2115 1656 Pls
2181 1491 Pls
2117 1882 Pls
1951 1551 Pls
2107 1593 Pls
2158 1476 Pls
2169 933 Pls
2110 1618 Pls
2255 1707 Pls
1793 1646 Pls
2054 1773 Pls
2107 1715 Pls
2147 1659 Pls
1769 1401 Pls
1996 1510 Pls
1847 1422 Pls
1978 1484 Pls
1970 1503 Pls
2003 1638 Pls
2043 1507 Pls
1979 1560 Pls
2157 1735 Pls
2252 1753 Pls
2038 1851 Pls
1971 1559 Pls
2019 1569 Pls
2112 1911 Pls
2227 1653 Pls
2218 1532 Pls
2221 1373 Pls
2134 1736 Pls
2125 1487 Pls
2059 1339 Pls
1961 1716 Pls
2063 1368 Pls
2036 1490 Pls
2099 1425 Pls
2010 1431 Pls
2181 1652 Pls
2000 1353 Pls
2012 1740 Pls
2034 1735 Pls
1810 1823 Pls
2146 1600 Pls
2135 1709 Pls
2041 1493 Pls
2143 1971 Pls
2066 1444 Pls
1980 1556 Pls
2047 1631 Pls
2059 1633 Pls
2007 1645 Pls
2070 1775 Pls
2137 1990 Pls
2014 1793 Pls
1992 1232 Pls
1779 1612 Pls
1906 1852 Pls
2180 1410 Pls
2159 1705 Pls
2039 1645 Pls
2012 1503 Pls
1874 1780 Pls
2055 1554 Pls
2022 1257 Pls
2209 1497 Pls
2219 1592 Pls
2106 1810 Pls
2227 1633 Pls
2041 1668 Pls
2010 1520 Pls
1957 1697 Pls
2062 1962 Pls
1890 1214 Pls
2078 1777 Pls
1962 1717 Pls
1944 1295 Pls
1995 1455 Pls
2055 1963 Pls
2151 1761 Pls
2171 1148 Pls
2080 1444 Pls
2051 1760 Pls
1960 1551 Pls
1980 1384 Pls
2078 1844 Pls
2104 1101 Pls
2049 1668 Pls
2060 1636 Pls
2040 1646 Pls
1839 1118 Pls
1933 1443 Pls
2010 1611 Pls
2003 1809 Pls
1829 1813 Pls
1959 1112 Pls
2062 1335 Pls
2273 1738 Pls
1873 1747 Pls
2062 1826 Pls
2122 1497 Pls
2187 1595 Pls
2217 1522 Pls
2159 1867 Pls
2043 1325 Pls
2058 1522 Pls
1720 1196 Pls
1984 1959 Pls
2038 1765 Pls
2119 1490 Pls
2197 1469 Pls
1875 1167 Pls
2239 1755 Pls
2034 1304 Pls
1947 1486 Pls
2012 1657 Pls
2201 1782 Pls
2017 1673 Pls
2020 1889 Pls
2126 1577 Pls
2100 1794 Pls
2128 1587 Pls
1955 1680 Pls
2068 1566 Pls
2060 1649 Pls
1995 1742 Pls
1854 1629 Pls
2256 1698 Pls
2297 1577 Pls
2132 1722 Pls
1920 1671 Pls
2004 1397 Pls
2060 1064 Pls
1990 1632 Pls
2012 1738 Pls
2052 1132 Pls
2049 1319 Pls
2013 1599 Pls
2002 1714 Pls
2000 1793 Pls
2261 1972 Pls
1916 1622 Pls
2255 1415 Pls
2037 1260 Pls
1998 1514 Pls
2178 1435 Pls
2080 1554 Pls
2065 1573 Pls
1954 1981 Pls
2285 1329 Pls
2195 1549 Pls
2236 1565 Pls
2019 1597 Pls
2180 1819 Pls
2114 1641 Pls
1949 1776 Pls
2032 1608 Pls
1945 1345 Pls
1796 1482 Pls
2057 1495 Pls
2208 1540 Pls
1875 1377 Pls
1890 1633 Pls
1803 1077 Pls
2091 1983 Pls
2142 1756 Pls
2105 1509 Pls
1882 1576 Pls
2130 1414 Pls
2082 1951 Pls
1941 1821 Pls
1983 1338 Pls
1934 1808 Pls
2092 1266 Pls
1953 1023 Pls
2087 1495 Pls
2016 1508 Pls
2109 1246 Pls
2140 1808 Pls
1884 1711 Pls
2046 1444 Pls
2081 1809 Pls
2110 1142 Pls
2082 1546 Pls
1962 1363 Pls
1903 1808 Pls
1993 1481 Pls
1963 1543 Pls
1917 1865 Pls
1929 1541 Pls
2046 1527 Pls
2137 1688 Pls
1863 1871 Pls
1969 1648 Pls
2111 1628 Pls
2012 1765 Pls
2061 1362 Pls
1972 1551 Pls
2071 1779 Pls
1841 1791 Pls
2209 1678 Pls
2099 1486 Pls
1986 1510 Pls
1999 1894 Pls
2235 1564 Pls
1984 1411 Pls
2092 1517 Pls
2201 1575 Pls
2121 1826 Pls
1942 1612 Pls
2158 1663 Pls
2025 1818 Pls
1980 1570 Pls
2055 1556 Pls
2300 1658 Pls
2016 1828 Pls
2157 1750 Pls
2061 1901 Pls
2039 1609 Pls
2117 1672 Pls
2018 1687 Pls
1941 1531 Pls
2324 1430 Pls
2098 1494 Pls
2079 1679 Pls
2205 1470 Pls
2007 1617 Pls
2254 1683 Pls
2151 1484 Pls
2120 1462 Pls
1891 1352 Pls
2115 1771 Pls
1986 1414 Pls
1904 1681 Pls
2013 1562 Pls
1970 1373 Pls
1909 1530 Pls
2099 1699 Pls
2230 1300 Pls
2031 1634 Pls
2094 1638 Pls
2217 1569 Pls
2009 1278 Pls
2094 1902 Pls
2159 1398 Pls
2107 1969 Pls
1995 1365 Pls
2142 1940 Pls
2178 1242 Pls
2248 1587 Pls
1936 1531 Pls
2018 1423 Pls
2038 1661 Pls
1926 1230 Pls
1973 1835 Pls
1830 1500 Pls
1951 1563 Pls
1907 640 Pls
2026 1529 Pls
2112 1863 Pls
2058 1520 Pls
2091 1822 Pls
2018 1698 Pls
1941 1741 Pls
2109 1800 Pls
2204 1655 Pls
1903 1822 Pls
2045 1787 Pls
2002 1509 Pls
2222 1719 Pls
1996 909 Pls
1971 1623 Pls
2161 1811 Pls
2069 1499 Pls
2291 1692 Pls
2166 1318 Pls
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1

%%EndDocument
 @endspecial 2615 2142 a
 currentpoint grestore moveto
 2615 2142 a 515 2142 a
 currentpoint currentpoint translate 1 0.5 div 1 0.5 div scale neg
exch neg exch translate
 515 2142
a 2031 2142 a
 currentpoint currentpoint translate 0.5 0.5 scale neg exch neg exch
translate
 2031 2142 a 2031 2142 a
 gsave currentpoint currentpoint translate 270 neg rotate neg exch
neg exch translate
 2031 2142 a @beginspecial
302 @llx 50 @lly 554 @urx 410 @ury 2520 @rwi @setspecial
%%BeginDocument: proj.eps
%!PS-Adobe-2.0
%%Title: proj.eps
%%Creator: gnuplot 3.7 patchlevel 1
%%CreationDate: Mon Apr 16 15:20:56 2001
%%DocumentFonts: (atend)
%%BoundingBox: 302 50 554 410
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -46 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def
/AL { stroke userlinewidth 2 div setlinewidth } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
714 420 M
63 0 V
2585 0 R
-63 0 V
630 420 M
(-140) Rshow
714 630 M
63 0 V
2585 0 R
-63 0 V
630 630 M
(-130) Rshow
714 840 M
63 0 V
2585 0 R
-63 0 V
630 840 M
(-120) Rshow
714 1050 M
63 0 V
2585 0 R
-63 0 V
-2669 0 R
(-110) Rshow
714 1260 M
63 0 V
2585 0 R
-63 0 V
-2669 0 R
(-100) Rshow
714 1470 M
63 0 V
2585 0 R
-63 0 V
-2669 0 R
(-90) Rshow
714 1680 M
63 0 V
2585 0 R
-63 0 V
-2669 0 R
(-80) Rshow
714 1890 M
63 0 V
2585 0 R
-63 0 V
-2669 0 R
(-70) Rshow
714 2100 M
63 0 V
2585 0 R
-63 0 V
-2669 0 R
(-60) Rshow
714 420 M
0 63 V
0 1617 R
0 -63 V
714 280 M
(320) Cshow
1092 420 M
0 63 V
0 1617 R
0 -63 V
0 -1757 R
(340) Cshow
1471 420 M
0 63 V
0 1617 R
0 -63 V
0 -1757 R
(360) Cshow
1849 420 M
0 63 V
0 1617 R
0 -63 V
0 -1757 R
(380) Cshow
2227 420 M
0 63 V
0 1617 R
0 -63 V
0 -1757 R
(400) Cshow
2605 420 M
0 63 V
0 1617 R
0 -63 V
0 -1757 R
(420) Cshow
2984 420 M
0 63 V
0 1617 R
0 -63 V
0 -1757 R
(440) Cshow
3362 420 M
0 63 V
0 1617 R
0 -63 V
0 -1757 R
(460) Cshow
1.000 UL
LTb
714 420 M
2648 0 V
0 1680 V
-2648 0 V
714 420 L
140 1260 M
currentpoint gsave translate 90 rotate 0 0 M
(log\(chances\)) Cshow
grestore
2038 70 M
(cost) Cshow
2038 2310 M
(ART1: 1000 runs-  variations=0.3; Apr-0-4-01) Cshow
1.000 UP
1.000 UL
LT0
1832 1844 Pls
1838 1535 Pls
1524 1078 Pls
2220 1166 Pls
1451 1780 Pls
2048 1097 Pls
2557 1861 Pls
1246 1605 Pls
1920 1447 Pls
1622 1439 Pls
2413 1723 Pls
2609 1471 Pls
2509 1570 Pls
1751 1648 Pls
1751 1442 Pls
1933 1557 Pls
2243 1192 Pls
2152 1491 Pls
2422 1483 Pls
1310 1599 Pls
2752 1501 Pls
2017 1570 Pls
2131 1388 Pls
2180 1656 Pls
1531 1559 Pls
1582 1757 Pls
1631 1713 Pls
2514 1531 Pls
2224 1233 Pls
2254 1824 Pls
1171 1056 Pls
2460 1404 Pls
2072 1773 Pls
1821 1669 Pls
1643 1756 Pls
2119 2089 Pls
2252 1147 Pls
2320 1880 Pls
1454 1697 Pls
2053 1405 Pls
1694 1825 Pls
1862 1794 Pls
2087 1230 Pls
2682 1317 Pls
1831 1797 Pls
2186 1667 Pls
2331 1176 Pls
1381 1625 Pls
2139 1528 Pls
1583 1330 Pls
1634 1793 Pls
2207 1570 Pls
3060 1548 Pls
2301 1166 Pls
1931 2001 Pls
1821 1776 Pls
1805 1679 Pls
2131 1449 Pls
1239 1572 Pls
2037 1599 Pls
2498 1628 Pls
2296 1371 Pls
1996 1623 Pls
1813 1741 Pls
2066 1425 Pls
2511 1326 Pls
1554 1900 Pls
2265 1594 Pls
1828 1652 Pls
2076 1438 Pls
1895 1358 Pls
1619 1624 Pls
2616 1593 Pls
1996 1753 Pls
1431 1723 Pls
1459 1463 Pls
1219 1572 Pls
2224 1217 Pls
1810 1406 Pls
1872 1657 Pls
2336 1079 Pls
2344 1839 Pls
1401 1636 Pls
1743 1779 Pls
2599 1726 Pls
1689 1310 Pls
1431 1699 Pls
2680 949 Pls
1599 1382 Pls
1876 1564 Pls
2022 1414 Pls
2292 1154 Pls
1989 1607 Pls
1922 1589 Pls
1613 1256 Pls
2584 1470 Pls
2408 1852 Pls
2627 1675 Pls
1726 1319 Pls
2376 1270 Pls
2360 1063 Pls
2041 1347 Pls
1963 1759 Pls
2429 968 Pls
2343 1221 Pls
1768 1600 Pls
1612 1800 Pls
2711 1414 Pls
1301 1504 Pls
2292 1498 Pls
2003 1783 Pls
1296 1467 Pls
2430 1806 Pls
2512 1526 Pls
2013 1856 Pls
2482 1544 Pls
1552 1637 Pls
2320 1249 Pls
2500 1530 Pls
2063 1549 Pls
2263 1482 Pls
2217 1762 Pls
1591 1541 Pls
1996 1499 Pls
2102 1684 Pls
2466 1746 Pls
1750 1405 Pls
1510 1492 Pls
2163 1930 Pls
2190 1692 Pls
2048 1603 Pls
2562 1390 Pls
1593 876 Pls
1420 1370 Pls
2186 1294 Pls
1705 1480 Pls
2479 605 Pls
1480 1309 Pls
1758 1505 Pls
1655 1613 Pls
1412 1520 Pls
1790 1908 Pls
2197 1653 Pls
2193 1121 Pls
1458 1759 Pls
1915 1729 Pls
1984 1585 Pls
2224 1278 Pls
2363 1641 Pls
2390 1584 Pls
2349 1752 Pls
1740 1393 Pls
2425 1758 Pls
2483 1260 Pls
2441 1706 Pls
2122 1206 Pls
1470 1691 Pls
2122 1708 Pls
1557 1805 Pls
2360 1465 Pls
1931 1636 Pls
1739 1278 Pls
2241 1713 Pls
1982 1528 Pls
1845 1634 Pls
2902 1794 Pls
2307 1897 Pls
1825 1341 Pls
2130 1734 Pls
2687 1579 Pls
1874 1247 Pls
1650 1427 Pls
2131 1729 Pls
1427 1671 Pls
1986 1629 Pls
2473 1737 Pls
1971 1628 Pls
2345 1633 Pls
2189 1842 Pls
1217 1800 Pls
1757 1574 Pls
2147 1623 Pls
1487 1519 Pls
1184 1471 Pls
2254 1599 Pls
1595 1480 Pls
2112 1337 Pls
2419 1655 Pls
1765 1950 Pls
2300 1576 Pls
2285 1424 Pls
2339 1659 Pls
2356 1653 Pls
2086 1672 Pls
2267 1579 Pls
1588 1387 Pls
1470 1728 Pls
1368 1894 Pls
2199 1436 Pls
1758 913 Pls
2822 1864 Pls
1626 1920 Pls
1509 1328 Pls
1829 1897 Pls
1688 1393 Pls
1753 1679 Pls
1849 1879 Pls
2437 1416 Pls
2369 1324 Pls
2330 1130 Pls
1350 1144 Pls
1764 1395 Pls
1944 1811 Pls
2678 1590 Pls
2107 1669 Pls
1908 1665 Pls
1838 1375 Pls
2487 1876 Pls
2447 1312 Pls
2105 1454 Pls
1558 1528 Pls
1944 1524 Pls
1765 1406 Pls
1262 1771 Pls
2469 1658 Pls
2300 1761 Pls
1829 1806 Pls
1532 1594 Pls
2705 1518 Pls
2215 1253 Pls
1715 1494 Pls
2321 1743 Pls
1551 1670 Pls
1978 1540 Pls
1691 1751 Pls
2702 1724 Pls
2372 1695 Pls
1823 1532 Pls
2824 1200 Pls
2185 1149 Pls
1943 1746 Pls
1725 1301 Pls
2161 1478 Pls
1979 1750 Pls
1902 1463 Pls
2164 1707 Pls
2357 1349 Pls
2056 1283 Pls
1286 1476 Pls
2263 1667 Pls
2155 1614 Pls
2071 1706 Pls
2768 1477 Pls
1730 1606 Pls
2272 1837 Pls
1719 1507 Pls
1960 1460 Pls
1851 1320 Pls
1960 1551 Pls
1388 1632 Pls
1424 1568 Pls
2232 1341 Pls
2430 1445 Pls
2552 1398 Pls
1799 1906 Pls
2635 1574 Pls
2259 1536 Pls
2283 1834 Pls
1651 1552 Pls
2038 1571 Pls
1172 1726 Pls
2406 1715 Pls
1836 1537 Pls
1602 1413 Pls
1516 1518 Pls
2363 1831 Pls
2254 1813 Pls
1276 1489 Pls
1739 1770 Pls
2884 1353 Pls
1842 1794 Pls
2320 1794 Pls
1509 1319 Pls
1446 1378 Pls
2173 1398 Pls
1729 1725 Pls
1701 1528 Pls
2477 1909 Pls
1805 1364 Pls
1575 1743 Pls
2185 1637 Pls
2430 1540 Pls
1734 1761 Pls
1620 1496 Pls
2567 1386 Pls
2291 1762 Pls
1996 1398 Pls
2368 1606 Pls
1616 1013 Pls
1601 1564 Pls
2400 1904 Pls
2515 1737 Pls
1498 1753 Pls
2506 1469 Pls
1897 1713 Pls
2666 1558 Pls
1893 1852 Pls
1282 1352 Pls
1767 1906 Pls
1628 1601 Pls
1605 1861 Pls
2236 1332 Pls
1860 1569 Pls
2246 1347 Pls
1998 1594 Pls
2371 1557 Pls
1815 1125 Pls
2162 1706 Pls
1730 1639 Pls
1884 1679 Pls
1065 1133 Pls
2700 1679 Pls
2741 1761 Pls
2141 1910 Pls
2687 1774 Pls
1687 1718 Pls
1918 1572 Pls
1924 1561 Pls
2223 1680 Pls
1975 1571 Pls
2682 1695 Pls
2554 1616 Pls
2203 1391 Pls
2347 1678 Pls
2503 1505 Pls
2402 1134 Pls
1862 1657 Pls
2001 1480 Pls
2217 1739 Pls
1910 1225 Pls
1970 1328 Pls
2029 1660 Pls
1763 1124 Pls
1381 1513 Pls
2660 1472 Pls
2484 1538 Pls
1874 1703 Pls
1808 1589 Pls
1848 1820 Pls
2400 1611 Pls
2326 1764 Pls
2230 1650 Pls
2219 1527 Pls
2195 1679 Pls
1474 1256 Pls
2510 1774 Pls
2209 1229 Pls
1493 1569 Pls
1952 1573 Pls
2553 1298 Pls
2539 1852 Pls
2355 1774 Pls
1615 1319 Pls
1746 1688 Pls
1674 1825 Pls
2530 1400 Pls
2672 1274 Pls
1435 1716 Pls
2135 1064 Pls
2659 1328 Pls
2040 1510 Pls
2434 1451 Pls
2123 1687 Pls
1481 1646 Pls
2316 1478 Pls
1802 1321 Pls
2338 1510 Pls
1789 1827 Pls
2654 1638 Pls
2411 1310 Pls
2030 1540 Pls
2258 1711 Pls
2436 1862 Pls
1520 1208 Pls
1962 1694 Pls
2388 1184 Pls
2424 1502 Pls
2561 1699 Pls
1485 1615 Pls
1544 1735 Pls
1379 1753 Pls
2331 1855 Pls
1639 1647 Pls
2338 1048 Pls
2231 1834 Pls
2296 1755 Pls
1643 1454 Pls
1572 1313 Pls
1815 1820 Pls
1342 1637 Pls
2001 1331 Pls
1830 1523 Pls
2632 1500 Pls
1870 1772 Pls
1277 1746 Pls
1073 1671 Pls
2020 1797 Pls
2121 1396 Pls
2097 1403 Pls
2281 1295 Pls
1744 1184 Pls
2614 1690 Pls
1684 1761 Pls
2259 1573 Pls
2204 1685 Pls
2430 1441 Pls
2567 1579 Pls
2210 1556 Pls
2579 1560 Pls
2381 1228 Pls
2814 1529 Pls
1757 1271 Pls
2110 1239 Pls
1670 1902 Pls
1754 1706 Pls
2219 1573 Pls
1789 1632 Pls
1599 1730 Pls
1942 1705 Pls
2019 1435 Pls
1493 1726 Pls
2461 1314 Pls
1961 1719 Pls
1296 1730 Pls
2471 1616 Pls
2820 1286 Pls
2210 1539 Pls
1736 1632 Pls
1746 1816 Pls
1480 1902 Pls
2225 1844 Pls
2286 1390 Pls
1258 1380 Pls
2427 1613 Pls
2428 1745 Pls
1549 1784 Pls
1652 1629 Pls
2429 1461 Pls
2187 1689 Pls
1611 1714 Pls
2509 1408 Pls
1589 1558 Pls
1749 1745 Pls
1813 1424 Pls
1970 1317 Pls
1757 1552 Pls
1828 1593 Pls
2663 1119 Pls
2086 1672 Pls
2179 1758 Pls
1442 1546 Pls
2330 1782 Pls
2783 1677 Pls
1599 1314 Pls
1690 1944 Pls
1780 1175 Pls
1548 1259 Pls
2238 1596 Pls
2356 1583 Pls
2611 1811 Pls
1669 1450 Pls
2673 1588 Pls
2559 1534 Pls
1789 1666 Pls
1853 1384 Pls
2213 1682 Pls
1971 1567 Pls
1853 1382 Pls
2069 1243 Pls
1902 1317 Pls
1484 1065 Pls
2359 1132 Pls
2434 1400 Pls
2288 1727 Pls
1977 1416 Pls
2322 1844 Pls
1961 1518 Pls
1997 1745 Pls
2375 1567 Pls
2060 1765 Pls
1916 1956 Pls
1631 1817 Pls
2242 1368 Pls
2336 1399 Pls
1509 1797 Pls
1622 1429 Pls
2321 1218 Pls
2458 1448 Pls
2548 1633 Pls
1646 1644 Pls
2491 1637 Pls
1856 1542 Pls
2110 1916 Pls
2052 1536 Pls
2411 1012 Pls
1688 1647 Pls
2233 1633 Pls
2211 1404 Pls
1534 1450 Pls
1978 1308 Pls
2757 1543 Pls
1454 1065 Pls
1891 1723 Pls
1464 1693 Pls
1475 1105 Pls
2158 1747 Pls
1552 1688 Pls
1332 1066 Pls
2517 1071 Pls
1631 1674 Pls
1632 1825 Pls
1699 1798 Pls
1831 1642 Pls
1637 1601 Pls
1417 985 Pls
1835 1735 Pls
1252 1739 Pls
2419 1637 Pls
1592 1649 Pls
1376 1525 Pls
2201 1721 Pls
1924 1629 Pls
2059 1681 Pls
2725 1772 Pls
2279 1471 Pls
2028 979 Pls
1626 1738 Pls
2467 1393 Pls
2502 1286 Pls
2784 1375 Pls
1960 1835 Pls
1693 987 Pls
1556 1745 Pls
1702 1755 Pls
2050 1653 Pls
2536 1859 Pls
2206 1300 Pls
2070 1582 Pls
2172 1537 Pls
1951 1824 Pls
1875 1637 Pls
1863 1563 Pls
1763 1480 Pls
1617 986 Pls
1944 1746 Pls
1867 1734 Pls
1960 1517 Pls
2682 1596 Pls
2569 1762 Pls
2455 1450 Pls
2280 1501 Pls
1466 1723 Pls
2309 1297 Pls
2564 1745 Pls
2196 1682 Pls
1946 1595 Pls
1898 1655 Pls
1663 1360 Pls
2053 1571 Pls
2225 1689 Pls
1842 1590 Pls
2943 1676 Pls
2459 1617 Pls
2888 1029 Pls
1507 1553 Pls
2108 1317 Pls
1381 1578 Pls
2318 1688 Pls
1988 1740 Pls
1865 1661 Pls
1627 1808 Pls
1587 1218 Pls
2712 1658 Pls
1657 1208 Pls
1774 1346 Pls
1932 1586 Pls
2138 1617 Pls
1617 1601 Pls
1869 1402 Pls
2054 2025 Pls
1738 1845 Pls
2493 1740 Pls
1684 1819 Pls
2118 1790 Pls
1669 1783 Pls
1738 1542 Pls
2292 1071 Pls
2546 1869 Pls
1463 1617 Pls
2588 1687 Pls
2448 1392 Pls
2068 1686 Pls
2516 1627 Pls
1416 1763 Pls
1933 1227 Pls
1812 1516 Pls
2541 1460 Pls
2111 1845 Pls
2314 1468 Pls
1713 1226 Pls
1772 1511 Pls
2473 1539 Pls
2032 1288 Pls
2987 1663 Pls
1597 1899 Pls
1456 1615 Pls
1804 1639 Pls
1523 1510 Pls
1799 1493 Pls
2038 1481 Pls
2598 1800 Pls
1629 1734 Pls
1622 1717 Pls
1887 1777 Pls
2334 1591 Pls
2291 1829 Pls
2054 1733 Pls
2296 1657 Pls
2289 1447 Pls
1890 1449 Pls
2127 1170 Pls
2181 1558 Pls
2302 1490 Pls
1307 1895 Pls
1586 1072 Pls
1194 1676 Pls
2035 1856 Pls
2087 1674 Pls
2500 1454 Pls
2367 1520 Pls
2167 1004 Pls
1638 1522 Pls
2737 1713 Pls
2056 1745 Pls
1758 1855 Pls
1772 1829 Pls
1759 1643 Pls
2136 1848 Pls
2594 1732 Pls
1734 1502 Pls
2129 1594 Pls
2366 1453 Pls
2032 1781 Pls
2591 1575 Pls
1605 1276 Pls
1999 1099 Pls
2656 1338 Pls
1967 1216 Pls
2150 1256 Pls
2249 1438 Pls
2350 1582 Pls
1536 1544 Pls
2423 1745 Pls
1707 1466 Pls
1375 1830 Pls
1513 1239 Pls
2306 1500 Pls
1570 1285 Pls
1855 1781 Pls
1486 1493 Pls
1753 1459 Pls
2029 1421 Pls
2571 1637 Pls
1884 1537 Pls
2448 1505 Pls
2614 1874 Pls
1594 1418 Pls
1923 1662 Pls
1939 1864 Pls
2083 560 Pls
2860 1729 Pls
1836 1358 Pls
1816 1919 Pls
2430 1399 Pls
1831 846 Pls
1655 1890 Pls
2192 1710 Pls
2544 1501 Pls
2254 1574 Pls
2117 1267 Pls
2345 1743 Pls
2493 1879 Pls
2441 1218 Pls
2017 1695 Pls
3057 1691 Pls
2630 1609 Pls
2448 2053 Pls
2303 1650 Pls
2553 1586 Pls
1856 1892 Pls
1854 1594 Pls
2522 1726 Pls
2163 1735 Pls
2058 1648 Pls
2407 1768 Pls
2238 1930 Pls
2844 1582 Pls
1959 1785 Pls
2800 1892 Pls
1569 1661 Pls
1842 1268 Pls
2168 1253 Pls
2356 1657 Pls
2157 1487 Pls
1865 1490 Pls
2609 1326 Pls
1752 1443 Pls
1609 1673 Pls
1799 2028 Pls
1978 1726 Pls
2608 1600 Pls
1880 1418 Pls
1750 1753 Pls
2574 1628 Pls
2669 1453 Pls
2718 1094 Pls
2134 1377 Pls
2031 1772 Pls
2138 1246 Pls
2691 1604 Pls
1977 1566 Pls
1840 1729 Pls
1514 1072 Pls
1654 1881 Pls
2156 1705 Pls
1606 1620 Pls
2714 1625 Pls
1711 1964 Pls
1987 1248 Pls
1898 1645 Pls
2161 1147 Pls
2423 1223 Pls
1899 1443 Pls
2322 1776 Pls
1481 1758 Pls
2162 1433 Pls
1145 1668 Pls
1779 1565 Pls
2376 1788 Pls
1697 1761 Pls
1435 1635 Pls
2055 1339 Pls
2534 913 Pls
2489 1371 Pls
2157 1952 Pls
2666 1879 Pls
1950 1786 Pls
1756 1785 Pls
2422 1746 Pls
1551 1033 Pls
2060 1708 Pls
1783 1667 Pls
2430 1047 Pls
2417 1202 Pls
2341 1692 Pls
2480 1565 Pls
1909 1842 Pls
2220 1306 Pls
2370 1480 Pls
1580 1678 Pls
1424 1737 Pls
1999 1471 Pls
1839 1852 Pls
1439 1739 Pls
2178 1145 Pls
2223 1685 Pls
1656 1717 Pls
2344 1666 Pls
2081 1227 Pls
2417 1446 Pls
2449 1352 Pls
2236 1705 Pls
1933 1707 Pls
1548 1869 Pls
1708 1757 Pls
1818 1776 Pls
2299 1783 Pls
2021 1604 Pls
1781 1615 Pls
2051 966 Pls
2340 1521 Pls
2565 1527 Pls
2541 1491 Pls
2531 1750 Pls
1789 1808 Pls
2039 1370 Pls
1655 1165 Pls
2825 1649 Pls
1465 1235 Pls
1518 1566 Pls
1670 1715 Pls
2203 1264 Pls
2533 1843 Pls
1755 1393 Pls
2437 1545 Pls
1646 1596 Pls
2591 1302 Pls
1472 1883 Pls
2210 1734 Pls
2254 1755 Pls
1798 1537 Pls
1663 1696 Pls
2410 1758 Pls
1939 1297 Pls
1623 1889 Pls
1523 1848 Pls
2522 1461 Pls
1794 1662 Pls
2442 1781 Pls
2269 1276 Pls
1356 1805 Pls
1780 1762 Pls
1274 1700 Pls
1940 1555 Pls
1991 1623 Pls
2036 1284 Pls
2373 1532 Pls
2074 1478 Pls
2599 1335 Pls
2714 1447 Pls
2095 1857 Pls
2207 1207 Pls
2156 1651 Pls
1387 1788 Pls
1545 1411 Pls
2163 1460 Pls
1593 1697 Pls
1760 1615 Pls
2408 1585 Pls
2045 1309 Pls
2051 1874 Pls
1137 1601 Pls
1342 1625 Pls
1215 1823 Pls
2251 1383 Pls
2474 1388 Pls
2001 1717 Pls
2610 1673 Pls
2201 1703 Pls
1544 1549 Pls
1734 1518 Pls
2511 1336 Pls
2343 1879 Pls
1348 1888 Pls
1554 1546 Pls
1673 1771 Pls
1250 1389 Pls
2251 1505 Pls
1724 1597 Pls
2800 1531 Pls
2309 1441 Pls
2340 1646 Pls
1823 1302 Pls
1761 1536 Pls
1567 1758 Pls
2231 1904 Pls
1703 1556 Pls
2245 1587 Pls
2212 1410 Pls
1733 1570 Pls
2142 1757 Pls
1565 1223 Pls
1654 1622 Pls
2000 1343 Pls
2134 1687 Pls
1841 1659 Pls
2776 1663 Pls
2521 1976 Pls
2036 1667 Pls
2612 1613 Pls
1468 1521 Pls
2042 1357 Pls
2283 1534 Pls
2392 1436 Pls
2578 1677 Pls
2194 1448 Pls
1738 2011 Pls
1832 1246 Pls
2592 1608 Pls
1402 1823 Pls
1829 1669 Pls
1855 1652 Pls
2822 1508 Pls
2055 1746 Pls
1592 1821 Pls
2091 1669 Pls
2121 1480 Pls
2244 441 Pls
2424 1645 Pls
2202 1653 Pls
1906 1874 Pls
1690 1927 Pls
1694 1383 Pls
2308 1576 Pls
1441 1831 Pls
2522 1403 Pls
1566 736 Pls
1531 1738 Pls
1646 1690 Pls
2496 1612 Pls
2301 1380 Pls
1664 1656 Pls
2553 1440 Pls
2062 1469 Pls
1846 1420 Pls
1605 1574 Pls
1603 1316 Pls
2099 1299 Pls
2135 1692 Pls
1605 1694 Pls
2138 1931 Pls
2595 1796 Pls
1762 1265 Pls
1295 1750 Pls
2359 1912 Pls
2816 1693 Pls
2738 1189 Pls
2037 1562 Pls
1901 1576 Pls
2777 952 Pls
2087 1708 Pls
2391 1624 Pls
2336 1673 Pls
1292 1585 Pls
2453 1653 Pls
2592 1705 Pls
1447 1487 Pls
1848 1223 Pls
2259 1872 Pls
2232 1556 Pls
2599 752 Pls
2446 1704 Pls
2455 1368 Pls
1687 1704 Pls
2203 1602 Pls
1897 1728 Pls
1461 1730 Pls
2417 1859 Pls
3017 1557 Pls
2710 1760 Pls
2194 1753 Pls
2552 1758 Pls
2431 1903 Pls
1783 1446 Pls
1323 1519 Pls
2753 1790 Pls
1758 1772 Pls
2266 1414 Pls
1992 14%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1

2042 1617 Pls
2194 1702 Pls
2531 1638 Pls
2592 1829 Pls
2299 1723 Pls
2609 1577 Pls
1871 1424 Pls
2290 1690 Pls
2879 1614 Pls
1817 1568 Pls
1973 1266 Pls
1814 1654 Pls
1900 1455 Pls
1611 1407 Pls
2207 1855 Pls
1584 1496 Pls
1934 1289 Pls
1737 1493 Pls
2824 1574 Pls
2165 1568 Pls
1632 1715 Pls
3065 1705 Pls
2234 1656 Pls
2161 1458 Pls
1936 1506 Pls
2286 1130 Pls
2342 1825 Pls
1941 1893 Pls
2166 1471 Pls
1758 1538 Pls
1835 1770 Pls
2208 1457 Pls
1994 1590 Pls
2382 1762 Pls
1460 1675 Pls
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1

%%EndDocument
 @endspecial 4131 2142 a
 currentpoint grestore moveto
 4131 2142 a 2031 2142 a
 currentpoint currentpoint translate 1 0.5 div 1 0.5 div scale neg
exch neg exch translate
 2031
2142 a 1305 3286 1284 4 v 1303 3365 4 79 v 1355 3342
a Fh(name)p 1547 3365 V 191 w(cost)p 1934 3365 V 190
w(log\(Chances\))p 2388 3365 V 129 w(N)p 2587 3365 V
1303 3444 V 1375 3420 a(hihi)p 1547 3444 V 121 w Fg(>)17
b Fh(392.034)p 1934 3444 V 123 w Fg(>)f Fh(-86.3225)p
2388 3444 V 123 w(285)p 2587 3444 V 1305 3447 1284 4
v 1303 3526 4 79 v 1375 3503 a(lohi)p 1547 3526 V 121
w Fg(<)h Fh(392.034)p 1934 3526 V 123 w Fg(>)f Fh(-86.3225)p
2388 3526 V 123 w(200)p 2587 3526 V 1303 3605 V 1375
3582 a(hilo)p 1547 3605 V 121 w Fg(>)h Fh(392.034)p 1934
3605 V 123 w Fg(<)f Fh(-86.3225)p 2388 3605 V 123 w(297)p
2587 3605 V 1303 3684 V 1375 3660 a(lolo)p 1547 3684
V 121 w Fg(<)h Fh(392.034)p 1934 3684 V 123 w Fg(<)f
Fh(-86.3225)p 2388 3684 V 123 w(217)p 2587 3684 V 1305
3687 1284 4 v 913 3820 a Fi(score)39 b(:)160 b(1)834
3898 y(what)39 b(if)g(:)h(no)g(change?)953 3977 y(hihi)f(:)120
b(29\045)39 b(\230\230\230\230\230\230\230)953 4056 y(lohi)g(:)120
b(30\045)39 b(\230\230\230\230\230\230\230\230)953 4135
y(hilo)g(:)120 b(20\045)39 b(\230\230\230\230\230)953
4214 y(lolo)g(:)120 b(22\045)39 b(\230\230\230\230\230\230)1926
5255 y Fk(4)p eop
%%Page: 5 5
5 4 bop 515 523 a Fm(4)119 b(T)-11 b(ARZAN)515 725 y
Fj(4.1)99 b(Business)25 b(Decisions,)g(Changes=2)913
939 y Fi(score)39 b(:)h(1.20755)834 1018 y(what)f(if)g(:)h
([peerReviewOfRequirements=2,)c(conductCodeWalkthrough=1]?)953
1097 y(hihi)j(:)120 b(20\045)39 b(\230\230\230\230\230)953
1176 y(lohi)g(:)120 b(22\045)39 b(\230\230\230\230\230\230)953
1254 y(hilo)g(:)120 b(29\045)39 b(\230\230\230\230\230\230\230)953
1333 y(lolo)g(:)120 b(29\045)39 b(\230\230\230\230\230\230\230)913
1491 y(score)g(:)h(1.18714)834 1570 y(what)f(if)g(:)h
([conductFormalReviews=2,)c(conductCodeWalkthrough=1]?)953
1649 y(hihi)j(:)120 b(24\045)39 b(\230\230\230\230\230\230)953
1728 y(lohi)g(:)120 b(21\045)39 b(\230\230\230\230\230)953
1807 y(hilo)g(:)120 b(24\045)39 b(\230\230\230\230\230\230)953
1885 y(lolo)g(:)120 b(30\045)39 b(\230\230\230\230\230\230\230\230)913
2043 y(score)g(:)h(1.16573)834 2122 y(what)f(if)g(:)h
([peerReviewOfRequirements=2,)c(conductFormalReviews=2]?)953
2201 y(hihi)j(:)120 b(21\045)39 b(\230\230\230\230\230)953
2280 y(lohi)g(:)120 b(25\045)39 b(\230\230\230\230\230\230)953
2359 y(hilo)g(:)120 b(26\045)39 b(\230\230\230\230\230\230\230)953
2438 y(lolo)g(:)120 b(28\045)39 b(\230\230\230\230\230\230\230)515
2675 y Fj(4.2)99 b(Cost)24 b(Decisions,)h(Changes=1)913
2810 y Fi(score)39 b(:)h(1.29559)834 2889 y(what)f(if)g(:)h
([[iv&v@76]Cost=1]?)953 2968 y(hihi)f(:)160 b(3\045)39
b(\230)953 3047 y(lohi)g(:)120 b(55\045)39 b
(\230\230\230\230\230\230\230\230\230\230\230\230\230\230)953
3126 y(hilo)g(:)160 b(3\045)39 b(\230)953 3204 y(lolo)g(:)120
b(40\045)39 b(\230\230\230\230\230\230\230\230\230\230)913
3362 y(score)g(:)h(1.10975)834 3441 y(what)f(if)g(:)h
([[goodIntegration@147]Cost=1]?)953 3520 y(hihi)f(:)120
b(23\045)39 b(\230\230\230\230\230\230)953 3599 y(lohi)g(:)120
b(30\045)39 b(\230\230\230\230\230\230\230\230)953 3678
y(hilo)g(:)120 b(20\045)39 b(\230\230\230\230\230)953
3757 y(lolo)g(:)120 b(27\045)39 b(\230\230\230\230\230\230\230)515
3994 y Fj(4.3)99 b(Cost)24 b(Decisions,)h(Changes=2)913
4129 y Fi(score)39 b(:)h(1.37102)834 4208 y(what)f(if)g(:)h
([[iv&v@76]Cost=1,)d([goodIntegration@147]Cost=1]?)953
4287 y(hihi)i(:)160 b(3\045)39 b(\230)953 4366 y(lohi)g(:)120
b(52\045)39 b(\230\230\230\230\230\230\230\230\230\230\230\230\230)953
4445 y(hilo)g(:)160 b(0\045)953 4523 y(lolo)39 b(:)120
b(45\045)39 b(\230\230\230\230\230\230\230\230\230\230\230)1926
5255 y Fk(5)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
